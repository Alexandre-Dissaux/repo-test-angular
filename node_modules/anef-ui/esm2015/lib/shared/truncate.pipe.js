/**
 * @fileoverview added by tsickle
 * Generated from: lib/shared/truncate.pipe.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
export class Truncate {
    // usage : | truncate:[limit, trail, tail]
    // default values : [20, '...', undefined]
    // exemple : | truncate:[10, '(...)', '.jpg'] -> "t(...).jpg"
    /**
     * @param {?} value
     * @param {?=} args
     * @return {?}
     */
    transform(value, args = []) {
        /** @type {?} */
        let limit = args.length > 0 ? parseInt(args[0], 10) : 20;
        if (value.length <= limit) {
            return value;
        }
        /** @type {?} */
        const trail = args.length > 1 ? args[1] : '...';
        /** @type {?} */
        const tail = args.length > 2 ? args[2] : '';
        limit -= tail.length + trail.length;
        /** @type {?} */
        const result = value.substring(0, limit) + trail + tail;
        return result;
    }
}
Truncate.decorators = [
    { type: Pipe, args: [{ name: 'truncate' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1bmNhdGUucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvc2hhcmVkL3RydW5jYXRlLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUdwRCxNQUFNLE9BQU8sUUFBUTs7Ozs7Ozs7O0lBSW5CLFNBQVMsQ0FBQyxLQUFhLEVBQUUsT0FBYyxFQUFFOztZQUNuQyxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUU7UUFFeEQsSUFBSSxLQUFLLENBQUMsTUFBTSxJQUFJLEtBQUssRUFBRTtZQUN6QixPQUFPLEtBQUssQ0FBQztTQUNkOztjQUVLLEtBQUssR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLOztjQUN6QyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMzQyxLQUFLLElBQUksSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDOztjQUU5QixNQUFNLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxDQUFDLEdBQUcsS0FBSyxHQUFHLElBQUk7UUFFdkQsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQzs7O1lBbkJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBQaXBlKHsgbmFtZTogJ3RydW5jYXRlJyB9KVxuZXhwb3J0IGNsYXNzIFRydW5jYXRlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gIC8vIHVzYWdlIDogfCB0cnVuY2F0ZTpbbGltaXQsIHRyYWlsLCB0YWlsXVxuICAvLyBkZWZhdWx0IHZhbHVlcyA6IFsyMCwgJy4uLicsIHVuZGVmaW5lZF1cbiAgLy8gZXhlbXBsZSA6IHwgdHJ1bmNhdGU6WzEwLCAnKC4uLiknLCAnLmpwZyddIC0+IFwidCguLi4pLmpwZ1wiXG4gIHRyYW5zZm9ybSh2YWx1ZTogc3RyaW5nLCBhcmdzOiBhbnlbXSA9IFtdKTogc3RyaW5nIHtcbiAgICBsZXQgbGltaXQgPSBhcmdzLmxlbmd0aCA+IDAgPyBwYXJzZUludChhcmdzWzBdLCAxMCkgOiAyMDtcblxuICAgIGlmICh2YWx1ZS5sZW5ndGggPD0gbGltaXQpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICBjb25zdCB0cmFpbCA9IGFyZ3MubGVuZ3RoID4gMSA/IGFyZ3NbMV0gOiAnLi4uJztcbiAgICBjb25zdCB0YWlsID0gYXJncy5sZW5ndGggPiAyID8gYXJnc1syXSA6ICcnO1xuICAgIGxpbWl0IC09IHRhaWwubGVuZ3RoICsgdHJhaWwubGVuZ3RoO1xuXG4gICAgY29uc3QgcmVzdWx0ID0gdmFsdWUuc3Vic3RyaW5nKDAsIGxpbWl0KSArIHRyYWlsICsgdGFpbDtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn1cbiJdfQ==