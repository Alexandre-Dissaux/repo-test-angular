/**
 * @fileoverview added by tsickle
 * Generated from: lib/confirm-modal/confirm-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class ConfirmModalComponent {
    constructor() {
        this.classIcon = 'fa fa-check-square-o';
        this.displayChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onClose() {
        this.displayChange.emit(false);
    }
    /**
     * @return {?}
     */
    onSubmit() {
        this.displayChange.emit(true);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.displayChange.unsubscribe();
    }
}
ConfirmModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-confirm-modal',
                template: "<p-dialog\n  [(visible)]=\"display\"\n  [modal]=\"true\"\n  [closable]=\"false\"\n  [responsive]=\"true\"\n  (onAfterHide)=\"onClose()\"\n  [style]=\"{width: '60rem', minWidth: '28rem'}\" [minY]=\"70\"\n  [baseZIndex]=\"10000\">\n  <p-header>\n    {{ title }}\n  </p-header>\n  <div class=\"msgBox info\">\n    <span class=\"{{classIcon}} check-icon\"></span>\n    <p>{{titleIcon}}</p>\n  </div>\n  <p *ngIf=\"warning\" class=\"warning\">{{warning | trim}}</p>\n  <p class=\"bold\">{{textBold | trim}}</p>\n  <p>{{text | trim}}</p>\n  \n  <p-footer>\n    <button\n      type=\"button\"\n      class=\"button-with-neighbour ui-button-secondary\"\n      pButton\n      (click)=\"onClose()\"\n      label=\"{{closeBtn}}\"\n      >\n    </button>\n    <button\n      type=\"button\"\n      pButton\n      (click)=\"onSubmit()\"\n      label=\"{{confirmBtn}}\"\n      class=\"ui-button-primary\"\n      >\n    </button>\n  </p-footer>\n</p-dialog>\n",
                styles: [".fa-check-square-o.check-icon{color:#0c6b0d!important}.warning{color:orange;background-color:#fbe5d6;text-align:start;padding:10px;margin-bottom:20px}"]
            }] }
];
/** @nocollapse */
ConfirmModalComponent.ctorParameters = () => [];
ConfirmModalComponent.propDecorators = {
    display: [{ type: Input }],
    title: [{ type: Input }],
    classIcon: [{ type: Input }],
    titleIcon: [{ type: Input }],
    textBold: [{ type: Input }],
    text: [{ type: Input }],
    warning: [{ type: Input }],
    closeBtn: [{ type: Input }],
    confirmBtn: [{ type: Input }],
    confirmBtnClass: [{ type: Input }],
    closeBtnClass: [{ type: Input }],
    displayChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ConfirmModalComponent.prototype.display;
    /** @type {?} */
    ConfirmModalComponent.prototype.title;
    /** @type {?} */
    ConfirmModalComponent.prototype.classIcon;
    /** @type {?} */
    ConfirmModalComponent.prototype.titleIcon;
    /** @type {?} */
    ConfirmModalComponent.prototype.textBold;
    /** @type {?} */
    ConfirmModalComponent.prototype.text;
    /** @type {?} */
    ConfirmModalComponent.prototype.warning;
    /** @type {?} */
    ConfirmModalComponent.prototype.closeBtn;
    /** @type {?} */
    ConfirmModalComponent.prototype.confirmBtn;
    /** @type {?} */
    ConfirmModalComponent.prototype.confirmBtnClass;
    /** @type {?} */
    ConfirmModalComponent.prototype.closeBtnClass;
    /** @type {?} */
    ConfirmModalComponent.prototype.displayChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmVmLXVpLyIsInNvdXJjZXMiOlsibGliL2NvbmZpcm0tbW9kYWwvY29uZmlybS1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQU9yRyxNQUFNLE9BQU8scUJBQXFCO0lBaUJoQztRQWRTLGNBQVMsR0FBRyxzQkFBc0IsQ0FBQztRQVlsQyxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFFN0IsQ0FBQzs7OztJQUVqQixPQUFPO1FBQ0wsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDakMsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNoQyxDQUFDOzs7O0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbkMsQ0FBQzs7O1lBbENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsbUJBQW1CO2dCQUM3Qiw0N0JBQTZDOzthQUU5Qzs7Ozs7c0JBRUUsS0FBSztvQkFDTCxLQUFLO3dCQUNMLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO21CQUNMLEtBQUs7c0JBQ0wsS0FBSzt1QkFFTCxLQUFLO3lCQUNMLEtBQUs7OEJBRUwsS0FBSzs0QkFDTCxLQUFLOzRCQUVMLE1BQU07Ozs7SUFkUCx3Q0FBMEI7O0lBQzFCLHNDQUF1Qjs7SUFDdkIsMENBQTRDOztJQUM1QywwQ0FBMkI7O0lBQzNCLHlDQUEwQjs7SUFDMUIscUNBQXNCOztJQUN0Qix3Q0FBeUI7O0lBRXpCLHlDQUEwQjs7SUFDMUIsMkNBQTRCOztJQUU1QixnREFBaUM7O0lBQ2pDLDhDQUErQjs7SUFFL0IsOENBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWNvbmZpcm0tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vY29uZmlybS1tb2RhbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2NvbmZpcm0tbW9kYWwuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1Nb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSAge1xuICBASW5wdXQoKSBkaXNwbGF5OiBib29sZWFuO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBjbGFzc0ljb24gPSAnZmEgZmEtY2hlY2stc3F1YXJlLW8nO1xuICBASW5wdXQoKSB0aXRsZUljb246IHN0cmluZztcbiAgQElucHV0KCkgdGV4dEJvbGQ6IHN0cmluZztcbiAgQElucHV0KCkgdGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSB3YXJuaW5nOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgY2xvc2VCdG46IHN0cmluZztcbiAgQElucHV0KCkgY29uZmlybUJ0bjogc3RyaW5nO1xuXG4gIEBJbnB1dCgpIGNvbmZpcm1CdG5DbGFzczogc3RyaW5nO1xuICBASW5wdXQoKSBjbG9zZUJ0bkNsYXNzOiBzdHJpbmc7XG5cbiAgQE91dHB1dCgpIGRpc3BsYXlDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBvbkNsb3NlKCkge1xuICAgIHRoaXMuZGlzcGxheUNoYW5nZS5lbWl0KGZhbHNlKTtcbiAgfVxuXG4gIG9uU3VibWl0KCkge1xuICAgIHRoaXMuZGlzcGxheUNoYW5nZS5lbWl0KHRydWUpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5kaXNwbGF5Q2hhbmdlLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==