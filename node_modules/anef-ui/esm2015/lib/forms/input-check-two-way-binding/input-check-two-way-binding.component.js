/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-check-two-way-binding/input-check-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { generateGuid } from '../../shared/guid';
export class InputCheckTwoWayBindingComponent {
    constructor() {
        this.required = false;
        this.readonly = false;
        this.errors = [];
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
    }
    /**
     * @return {?}
     */
    get icon() {
        return this.option.icon || 'pi pi-check';
    }
}
InputCheckTwoWayBindingComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-check-two-way-binding',
                template: "<div class=\"p-grid nogutter\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" class=\"radio-label\" for=\"{{guid}}\">\n      {{label}} <span *ngIf=\"required && !readonly\" class=\"redish\">*</span> :\n    </label>\n\n    <div class=\"input\">\n      <p-checkbox (ngModelChange)=\"ngModelChange.emit($event)\"\n                  [(ngModel)]=\"model\"\n                  [checkboxIcon]=\"icon\"\n                  [label]=\"option.label\"\n                  [ngClass]=\"{'error': errors.length}\"\n                  [readonly]=\"readonly\"\n                  [styleClass]=\"option.styleClass\"\n                  id=\"{{guid}}\"\n                  name=\"{{guid}}\">\n      </p-checkbox>\n    </div>\n\n    <div *ngIf=\"errors.length\" class=\"error redish\">\n      <div *ngFor=\"let error of errors\">\n        <p>\n          <i class=\"pi pi-info-circle\"></i>\n          <span>{{error}}</span>\n        </p>\n      </div>\n    </div>\n\n  </div>\n</div>\n",
                styles: ["label{width:100%;color:#656565;font-size:1.4rem}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}"]
            }] }
];
InputCheckTwoWayBindingComponent.propDecorators = {
    model: [{ type: Input }],
    name: [{ type: Input }],
    required: [{ type: Input }],
    readonly: [{ type: Input }],
    label: [{ type: Input }],
    option: [{ type: Input }],
    errors: [{ type: Input }],
    ngModelChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.name;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.readonly;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.option;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.errors;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.guid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nL2lucHV0LWNoZWNrLXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVFqRCxNQUFNLE9BQU8sZ0NBQWdDO0lBTjdDO1FBU1csYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFDWCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFN0MsU0FBSSxHQUFHLFlBQVksRUFBRSxDQUFDO0lBS3hCLENBQUM7Ozs7SUFIQyxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLGFBQWEsQ0FBQztJQUMzQyxDQUFDOzs7WUFwQkYsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsa0NBQWtDO2dCQUM1QyxvOUJBQTJEOzthQUU1RDs7O29CQUVFLEtBQUs7bUJBQ0wsS0FBSzt1QkFDTCxLQUFLO3VCQUNMLEtBQUs7b0JBQ0wsS0FBSztxQkFDTCxLQUFLO3FCQUNMLEtBQUs7NEJBQ0wsTUFBTTs7OztJQVBQLGlEQUFvQjs7SUFDcEIsZ0RBQXNCOztJQUN0QixvREFBMEI7O0lBQzFCLG9EQUEwQjs7SUFDMUIsaURBQXVCOztJQUN2QixrREFBNEI7O0lBQzVCLGtEQUFxQjs7SUFDckIseURBQTZDOztJQUU3QyxnREFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuXG5pbXBvcnQgeyBnZW5lcmF0ZUd1aWQgfSBmcm9tICcuLi8uLi9zaGFyZWQvZ3VpZCc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FuZWYtaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LWNoZWNrLXR3by13YXktYmluZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LWNoZWNrLXR3by13YXktYmluZGluZy5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dENoZWNrVHdvV2F5QmluZGluZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG1vZGVsOiBhbnk7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgcmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9uOiBTZWxlY3RJdGVtO1xuICBASW5wdXQoKSBlcnJvcnMgPSBbXTtcbiAgQE91dHB1dCgpIG5nTW9kZWxDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZ3VpZCA9IGdlbmVyYXRlR3VpZCgpO1xuXG4gIGdldCBpY29uKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9uLmljb24gfHwgJ3BpIHBpLWNoZWNrJztcbiAgfVxufVxuIl19