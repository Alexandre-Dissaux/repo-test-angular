/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-radio-two-way-binding/input-radio-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { generateGuid } from '../../shared/guid';
export class InputRadioTwoWayBindingComponent {
    constructor() {
        this.required = false;
        this.disabled = false;
        this.column = false;
        this.spread = false;
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
        this.error = null;
    }
    /**
     * @param {?} errors
     * @return {?}
     */
    set errors(errors) {
        if (!errors) {
            this.error = null;
        }
        else if (typeof (errors) === 'string') {
            this.error = [errors];
        }
        else {
            this.error = errors;
        }
    }
}
InputRadioTwoWayBindingComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-radio-two-way-binding',
                template: "<div class=\"p-grid nogutter\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" class=\"radio-label\" for=\"{{guid}}\">\n      {{label}} <span *ngIf=\"required && !disabled\" class=\"redish\">*</span> :\n    </label>\n\n    <div class=\"input\">\n      <div [ngClass]=\"{'p-dir-col': column}\" class=\"p-grid nogutter\">\n        <ng-container *ngFor=\"let option of options\">\n          <div [ngClass]=\"{'no-col': !spread}\" class=\"p-col\">\n            <p-radioButton (ngModelChange)=\"ngModelChange.emit($event)\"\n                           [(ngModel)]=\"model\"\n                           [disabled]=\"disabled\"\n                           [label]=\"option.label\"\n                           [ngClass]=\"{'error': error && error.length}\"\n                           [styleClass]=\"option.styleClass\"\n                           [value]=\"option.value\"\n                           name=\"{{guid}}\">\n            </p-radioButton>\n          </div>\n        </ng-container>\n      </div>\n    </div>\n\n    <div *ngIf=\"error && error.length\" class=\"error redish\">\n      <div *ngFor=\"let errorLine of error\">\n        <p>\n          <i class=\"pi pi-info-circle\"></i>\n          <span>{{errorLine}}</span>\n        </p>\n      </div>\n    </div>\n\n  </div>\n</div>\n",
                styles: ["label{width:100%}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}"]
            }] }
];
InputRadioTwoWayBindingComponent.propDecorators = {
    model: [{ type: Input }],
    name: [{ type: Input }],
    required: [{ type: Input }],
    disabled: [{ type: Input }],
    label: [{ type: Input }],
    column: [{ type: Input }],
    spread: [{ type: Input }],
    options: [{ type: Input }],
    ngModelChange: [{ type: Output }],
    errors: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.name;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.disabled;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.column;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.spread;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.options;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.guid;
    /** @type {?} */
    InputRadioTwoWayBindingComponent.prototype.error;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcmFkaW8tdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvaW5wdXQtcmFkaW8tdHdvLXdheS1iaW5kaW5nL2lucHV0LXJhZGlvLXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVFqRCxNQUFNLE9BQU8sZ0NBQWdDO0lBTjdDO1FBU1csYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRWpCLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixXQUFNLEdBQUcsS0FBSyxDQUFDO1FBRWQsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBVzdDLFNBQUksR0FBRyxZQUFZLEVBQUUsQ0FBQztRQUN0QixVQUFLLEdBQUcsSUFBSSxDQUFDO0lBQ2YsQ0FBQzs7Ozs7SUFaQyxJQUFhLE1BQU0sQ0FBQyxNQUE4QjtRQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7YUFBTSxJQUFJLE9BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxRQUFRLEVBQUU7WUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3ZCO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztTQUNyQjtJQUNILENBQUM7OztZQXhCRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSxrQ0FBa0M7Z0JBQzVDLDB4Q0FBMkQ7O2FBRTVEOzs7b0JBRUUsS0FBSzttQkFDTCxLQUFLO3VCQUNMLEtBQUs7dUJBQ0wsS0FBSztvQkFDTCxLQUFLO3FCQUNMLEtBQUs7cUJBQ0wsS0FBSztzQkFDTCxLQUFLOzRCQUNMLE1BQU07cUJBQ04sS0FBSzs7OztJQVROLGlEQUFvQjs7SUFDcEIsZ0RBQXNCOztJQUN0QixvREFBMEI7O0lBQzFCLG9EQUEwQjs7SUFDMUIsaURBQXVCOztJQUN2QixrREFBd0I7O0lBQ3hCLGtEQUF3Qjs7SUFDeEIsbURBQStCOztJQUMvQix5REFBNkM7O0lBVzdDLGdEQUFzQjs7SUFDdEIsaURBQWEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuXG5pbXBvcnQgeyBnZW5lcmF0ZUd1aWQgfSBmcm9tICcuLi8uLi9zaGFyZWQvZ3VpZCc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FuZWYtaW5wdXQtcmFkaW8tdHdvLXdheS1iaW5kaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LXJhZGlvLXR3by13YXktYmluZGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LXJhZGlvLXR3by13YXktYmluZGluZy5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dFJhZGlvVHdvV2F5QmluZGluZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpIG1vZGVsOiBhbnk7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgcmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgY29sdW1uID0gZmFsc2U7XG4gIEBJbnB1dCgpIHNwcmVhZCA9IGZhbHNlO1xuICBASW5wdXQoKSBvcHRpb25zOiBTZWxlY3RJdGVtW107XG4gIEBPdXRwdXQoKSBuZ01vZGVsQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBASW5wdXQoKSBzZXQgZXJyb3JzKGVycm9yczogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPikge1xuICAgIGlmICghZXJyb3JzKSB7XG4gICAgICB0aGlzLmVycm9yID0gbnVsbDtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZihlcnJvcnMpID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5lcnJvciA9IFtlcnJvcnNdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVycm9yID0gZXJyb3JzO1xuICAgIH1cbiAgfVxuXG4gIGd1aWQgPSBnZW5lcmF0ZUd1aWQoKTtcbiAgZXJyb3IgPSBudWxsO1xufVxuIl19