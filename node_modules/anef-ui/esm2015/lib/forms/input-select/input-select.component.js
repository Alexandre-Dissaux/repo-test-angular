/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-select/input-select.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
export class InputSelectComponent {
    constructor() {
        this.required = false;
        this.readonly = false;
        this.messages = {
            required: 'Ce champ est obligatoire'
        };
        this.defaultDisplay = 'N/A';
        this.dropdownIcon = 'pi pi-chevron-down';
    }
    /**
     * @return {?}
     */
    formContainsError() {
        return this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched);
    }
    /**
     * @return {?}
     */
    toString() {
        /** @type {?} */
        let found = null;
        if (this.formGroup && this.controlName && this.options) {
            /** @type {?} */
            const value = this.formGroup.controls[this.controlName].value;
            found = (this.options && this.options.filter((/**
             * @param {?} option
             * @return {?}
             */
            option => option.value === value))[0]) || null;
        }
        return (found && found.label) || this.defaultDisplay;
    }
}
InputSelectComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-select',
                template: "<div class=\"p-grid nogutter\" [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" [htmlFor]=\"controlName\">\n      {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n    </label>\n\n    <ng-content select=\"[sub-label]\"></ng-content>\n\n    <p-dropdown *ngIf=\"!readonly; else textual\"\n                [id]=\"controlName\"\n                name=\"controlName\"\n                [placeholder]=\"placeholder\"\n                [options]=options\n                [dropdownIcon]=\"dropdownIcon\"\n                [formControlName]=\"controlName\"></p-dropdown>\n    <ng-template #textual>\n      <span class=\"textual\">{{toString()}}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                styles: [".textual{display:block}"]
            }] }
];
InputSelectComponent.propDecorators = {
    formGroup: [{ type: Input }],
    controlName: [{ type: Input }],
    required: [{ type: Input }],
    readonly: [{ type: Input }],
    label: [{ type: Input }],
    placeholder: [{ type: Input }],
    options: [{ type: Input }],
    messages: [{ type: Input }],
    defaultDisplay: [{ type: Input }],
    dropdownIcon: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    InputSelectComponent.prototype.formGroup;
    /** @type {?} */
    InputSelectComponent.prototype.controlName;
    /** @type {?} */
    InputSelectComponent.prototype.required;
    /** @type {?} */
    InputSelectComponent.prototype.readonly;
    /** @type {?} */
    InputSelectComponent.prototype.label;
    /** @type {?} */
    InputSelectComponent.prototype.placeholder;
    /** @type {?} */
    InputSelectComponent.prototype.options;
    /** @type {?} */
    InputSelectComponent.prototype.messages;
    /** @type {?} */
    InputSelectComponent.prototype.defaultDisplay;
    /** @type {?} */
    InputSelectComponent.prototype.dropdownIcon;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvaW5wdXQtc2VsZWN0L2lucHV0LXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBUzNDLE1BQU0sT0FBTyxvQkFBb0I7SUFOakM7UUFTVyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFJakIsYUFBUSxHQUFHO1lBQ2xCLFFBQVEsRUFBRSwwQkFBMEI7U0FDckMsQ0FBQztRQUNPLG1CQUFjLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLGlCQUFZLEdBQUcsb0JBQW9CLENBQUM7SUFlL0MsQ0FBQzs7OztJQWJRLGlCQUFpQjtRQUN0QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSTtZQUM5RCxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzNHLENBQUM7Ozs7SUFFRCxRQUFROztZQUNGLEtBQUssR0FBRyxJQUFJO1FBQ2hCLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7O2tCQUNoRCxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUs7WUFDN0QsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07Ozs7WUFBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7U0FDNUY7UUFDRCxPQUFPLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ3ZELENBQUM7OztZQWhDRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSxtQkFBbUI7Z0JBQzdCLCttQ0FBNEM7O2FBRTdDOzs7d0JBRUUsS0FBSzswQkFDTCxLQUFLO3VCQUNMLEtBQUs7dUJBQ0wsS0FBSztvQkFDTCxLQUFLOzBCQUNMLEtBQUs7c0JBQ0wsS0FBSzt1QkFDTCxLQUFLOzZCQUdMLEtBQUs7MkJBQ0wsS0FBSzs7OztJQVhOLHlDQUE4Qjs7SUFDOUIsMkNBQTZCOztJQUM3Qix3Q0FBMEI7O0lBQzFCLHdDQUEwQjs7SUFDMUIscUNBQXVCOztJQUN2QiwyQ0FBNkI7O0lBQzdCLHVDQUErQjs7SUFDL0Isd0NBRUU7O0lBQ0YsOENBQWdDOztJQUNoQyw0Q0FBNkMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbmd1bGFyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdhbmVmLWlucHV0LXNlbGVjdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1zZWxlY3QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1zZWxlY3QuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRTZWxlY3RDb21wb25lbnQge1xuICBASW5wdXQoKSBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcbiAgQElucHV0KCkgY29udHJvbE5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgcmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9uczogU2VsZWN0SXRlbVtdO1xuICBASW5wdXQoKSBtZXNzYWdlcyA9IHtcbiAgICByZXF1aXJlZDogJ0NlIGNoYW1wIGVzdCBvYmxpZ2F0b2lyZSdcbiAgfTtcbiAgQElucHV0KCkgZGVmYXVsdERpc3BsYXkgPSAnTi9BJztcbiAgQElucHV0KCkgZHJvcGRvd25JY29uID0gJ3BpIHBpLWNoZXZyb24tZG93bic7XG5cbiAgcHVibGljIGZvcm1Db250YWluc0Vycm9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5lcnJvcnMgIT09IG51bGwgJiZcbiAgICAgICh0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5kaXJ0eSB8fCB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS50b3VjaGVkKTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIGxldCBmb3VuZCA9IG51bGw7XG4gICAgaWYgKHRoaXMuZm9ybUdyb3VwICYmIHRoaXMuY29udHJvbE5hbWUgJiYgdGhpcy5vcHRpb25zKSB7XG4gICAgICBjb25zdCB2YWx1ZSA9IHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLnZhbHVlO1xuICAgICAgZm91bmQgPSAodGhpcy5vcHRpb25zICYmIHRoaXMub3B0aW9ucy5maWx0ZXIob3B0aW9uID0+IG9wdGlvbi52YWx1ZSA9PT0gdmFsdWUpWzBdKSB8fCBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gKGZvdW5kICYmIGZvdW5kLmxhYmVsKSB8fCB0aGlzLmRlZmF1bHREaXNwbGF5O1xuICB9XG59XG4iXX0=