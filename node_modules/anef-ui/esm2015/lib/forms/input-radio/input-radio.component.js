/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-radio/input-radio.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
export class InputRadioComponent {
    constructor() {
        this.required = false;
        this.readonly = false;
        this.column = false;
        this.spread = false;
        this.messages = {
            required: 'Ce champ est obligatoire'
        };
        this.defaultDisplay = 'N/A';
        this.classStyle = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (!this.name) {
            this.name = this.controlName;
        }
    }
    /**
     * @return {?}
     */
    formContainsError() {
        return (!!this.formGroup &&
            !!this.formGroup.controls[this.controlName] &&
            this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched));
    }
    /**
     * @return {?}
     */
    toString() {
        /** @type {?} */
        let found = null;
        if (this.formGroup && this.controlName && this.options) {
            /** @type {?} */
            const value = this.formGroup.controls[this.controlName].value;
            found = (this.options && this.options.filter((/**
             * @param {?} option
             * @return {?}
             */
            option => option.value === value))[0]) || null;
        }
        return (found && found.label) || this.defaultDisplay;
    }
}
InputRadioComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-radio',
                template: "<div class=\"p-grid nogutter\" *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <fieldset>\n      <legend *ngIf=\"label\" class=\"radio-label\">\n          {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n      </legend>\n      <ng-content select=\"[sub-label]\"></ng-content>\n\n      <div *ngIf=\"!readonly; else textual\"\n          class=\"p-grid nogutter\" [ngClass]=\"{'p-dir-col': column}\">\n        <ng-container *ngFor=\"let option of options\">\n          <div class=\"p-col\" [ngClass]=\"{'no-col': !spread, 'classStyle': classStyle}\">\n            <p-radioButton [name]=\"name\"\n                          [value]=\"option.value\"\n                          [label]=\"option.label\"\n                          [formControlName]=\"controlName\"\n                          [styleClass]=\"option.styleClass\">\n            </p-radioButton>\n          </div>\n        </ng-container>\n      </div>\n    </fieldset>\n    <ng-template #textual>\n      <span class=\"textual\">{{toString()}}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                styles: ["label{width:100%}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}fieldset,legend{margin:0;padding:0;border:0}fieldset legend{border-bottom:0}.classStyle{padding-right:2rem}"]
            }] }
];
InputRadioComponent.propDecorators = {
    formGroup: [{ type: Input }],
    controlName: [{ type: Input }],
    name: [{ type: Input }],
    required: [{ type: Input }],
    readonly: [{ type: Input }],
    label: [{ type: Input }],
    column: [{ type: Input }],
    spread: [{ type: Input }],
    options: [{ type: Input }],
    messages: [{ type: Input }],
    defaultDisplay: [{ type: Input }],
    classStyle: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    InputRadioComponent.prototype.formGroup;
    /** @type {?} */
    InputRadioComponent.prototype.controlName;
    /** @type {?} */
    InputRadioComponent.prototype.name;
    /** @type {?} */
    InputRadioComponent.prototype.required;
    /** @type {?} */
    InputRadioComponent.prototype.readonly;
    /** @type {?} */
    InputRadioComponent.prototype.label;
    /** @type {?} */
    InputRadioComponent.prototype.column;
    /** @type {?} */
    InputRadioComponent.prototype.spread;
    /** @type {?} */
    InputRadioComponent.prototype.options;
    /** @type {?} */
    InputRadioComponent.prototype.messages;
    /** @type {?} */
    InputRadioComponent.prototype.defaultDisplay;
    /** @type {?} */
    InputRadioComponent.prototype.classStyle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC1yYWRpby9pbnB1dC1yYWRpby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBUzNDLE1BQU0sT0FBTyxtQkFBbUI7SUFOaEM7UUFVVyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFZixhQUFRLEdBQUc7WUFDbEIsUUFBUSxFQUFFLDBCQUEwQjtTQUNyQyxDQUFDO1FBQ08sbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIsZUFBVSxHQUFHLEtBQUssQ0FBQztJQXlCOUIsQ0FBQzs7OztJQXZCQyxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDZCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUM7U0FDOUI7SUFDSCxDQUFDOzs7O0lBRUQsaUJBQWlCO1FBQ2YsT0FBTyxDQUNMLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUztZQUNoQixDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQztZQUMzQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxLQUFLLElBQUk7WUFDekQsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FDdkcsQ0FBQztJQUNKLENBQUM7Ozs7SUFFRCxRQUFROztZQUNGLEtBQUssR0FBRyxJQUFJO1FBQ2hCLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7O2tCQUNoRCxLQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUs7WUFDN0QsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07Ozs7WUFBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7U0FDNUY7UUFDRCxPQUFPLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ3ZELENBQUM7OztZQTVDRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLDQ5Q0FBMkM7O2FBRTVDOzs7d0JBRUUsS0FBSzswQkFDTCxLQUFLO21CQUNMLEtBQUs7dUJBQ0wsS0FBSzt1QkFDTCxLQUFLO29CQUNMLEtBQUs7cUJBQ0wsS0FBSztxQkFDTCxLQUFLO3NCQUNMLEtBQUs7dUJBQ0wsS0FBSzs2QkFHTCxLQUFLO3lCQUNMLEtBQUs7Ozs7SUFiTix3Q0FBOEI7O0lBQzlCLDBDQUE2Qjs7SUFDN0IsbUNBQXNCOztJQUN0Qix1Q0FBMEI7O0lBQzFCLHVDQUEwQjs7SUFDMUIsb0NBQXVCOztJQUN2QixxQ0FBd0I7O0lBQ3hCLHFDQUF3Qjs7SUFDeEIsc0NBQStCOztJQUMvQix1Q0FFRTs7SUFDRiw2Q0FBZ0M7O0lBQ2hDLHlDQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLy8gQW5ndWxhclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgU2VsZWN0SXRlbSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnYW5lZi1pbnB1dC1yYWRpbycsXG4gIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC1yYWRpby5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LXJhZGlvLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0UmFkaW9Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKSBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcbiAgQElucHV0KCkgY29udHJvbE5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSByZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBjb2x1bW4gPSBmYWxzZTtcbiAgQElucHV0KCkgc3ByZWFkID0gZmFsc2U7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IFNlbGVjdEl0ZW1bXTtcbiAgQElucHV0KCkgbWVzc2FnZXMgPSB7XG4gICAgcmVxdWlyZWQ6ICdDZSBjaGFtcCBlc3Qgb2JsaWdhdG9pcmUnXG4gIH07XG4gIEBJbnB1dCgpIGRlZmF1bHREaXNwbGF5ID0gJ04vQSc7XG4gIEBJbnB1dCgpIGNsYXNzU3R5bGUgPSBmYWxzZTtcblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBpZiAoIXRoaXMubmFtZSkge1xuICAgICAgdGhpcy5uYW1lID0gdGhpcy5jb250cm9sTmFtZTtcbiAgICB9XG4gIH1cblxuICBmb3JtQ29udGFpbnNFcnJvcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gKFxuICAgICAgISF0aGlzLmZvcm1Hcm91cCAmJlxuICAgICAgISF0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXSAmJlxuICAgICAgdGhpcy5mb3JtR3JvdXAuY29udHJvbHNbdGhpcy5jb250cm9sTmFtZV0uZXJyb3JzICE9PSBudWxsICYmXG4gICAgICAodGhpcy5mb3JtR3JvdXAuY29udHJvbHNbdGhpcy5jb250cm9sTmFtZV0uZGlydHkgfHwgdGhpcy5mb3JtR3JvdXAuY29udHJvbHNbdGhpcy5jb250cm9sTmFtZV0udG91Y2hlZClcbiAgICApO1xuICB9XG5cbiAgdG9TdHJpbmcoKSB7XG4gICAgbGV0IGZvdW5kID0gbnVsbDtcbiAgICBpZiAodGhpcy5mb3JtR3JvdXAgJiYgdGhpcy5jb250cm9sTmFtZSAmJiB0aGlzLm9wdGlvbnMpIHtcbiAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5mb3JtR3JvdXAuY29udHJvbHNbdGhpcy5jb250cm9sTmFtZV0udmFsdWU7XG4gICAgICBmb3VuZCA9ICh0aGlzLm9wdGlvbnMgJiYgdGhpcy5vcHRpb25zLmZpbHRlcihvcHRpb24gPT4gb3B0aW9uLnZhbHVlID09PSB2YWx1ZSlbMF0pIHx8IG51bGw7XG4gICAgfVxuICAgIHJldHVybiAoZm91bmQgJiYgZm91bmQubGFiZWwpIHx8IHRoaXMuZGVmYXVsdERpc3BsYXk7XG4gIH1cbn1cbiJdfQ==