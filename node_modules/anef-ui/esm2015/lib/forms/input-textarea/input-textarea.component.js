/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-textarea/input-textarea.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
export class InputTextareaComponent {
    constructor() {
        this.MAX_LENGTH = 524288;
        this.required = false;
        this.readonly = false;
        this.rows = 5;
        this.cols = 30;
        this.maxLength = this.MAX_LENGTH;
        this.messages = {
            required: 'Ce champ est obligatoire',
            maxLength: 'Le nombre de caractères autorisés est dépassé'
        };
        this.defaultDisplay = 'N/A';
        this.spellCheck = false;
    }
    /**
     * @return {?}
     */
    formContainsError() {
        return this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched);
    }
    /**
     * @return {?}
     */
    toString() {
        return this.formGroup.controls[this.controlName].value || this.defaultDisplay;
    }
}
InputTextareaComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-textarea',
                template: "<div class=\"p-grid nogutter\" [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" [htmlFor]=\"controlName\">\n      {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n    </label>\n\n    <ng-content select=\"[sub-label]\"></ng-content>\n\n    <textarea *ngIf=\"!readonly; else textual\"\n              [id]=\"controlName\"\n              type=\"text\"\n              pInputTextarea\n              [rows]=\"rows\"\n              [cols]=\"cols\"\n              [maxLength]=\"maxLength\"\n              [formControlName]=\"controlName\"\n              [spellcheck]=\"spellCheck\"></textarea>\n    <ng-template #textual>\n      <span class=\"textual\">{{ toString() }}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n      <div *ngIf=\"formGroup.controls[controlName].errors.maxlength\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.maxLength}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                styles: [".textual{display:block}"]
            }] }
];
InputTextareaComponent.propDecorators = {
    formGroup: [{ type: Input }],
    controlName: [{ type: Input }],
    required: [{ type: Input }],
    readonly: [{ type: Input }],
    label: [{ type: Input }],
    rows: [{ type: Input }],
    cols: [{ type: Input }],
    maxLength: [{ type: Input }],
    messages: [{ type: Input }],
    defaultDisplay: [{ type: Input }],
    spellCheck: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    InputTextareaComponent.prototype.MAX_LENGTH;
    /** @type {?} */
    InputTextareaComponent.prototype.formGroup;
    /** @type {?} */
    InputTextareaComponent.prototype.controlName;
    /** @type {?} */
    InputTextareaComponent.prototype.required;
    /** @type {?} */
    InputTextareaComponent.prototype.readonly;
    /** @type {?} */
    InputTextareaComponent.prototype.label;
    /** @type {?} */
    InputTextareaComponent.prototype.rows;
    /** @type {?} */
    InputTextareaComponent.prototype.cols;
    /** @type {?} */
    InputTextareaComponent.prototype.maxLength;
    /** @type {?} */
    InputTextareaComponent.prototype.messages;
    /** @type {?} */
    InputTextareaComponent.prototype.defaultDisplay;
    /** @type {?} */
    InputTextareaComponent.prototype.spellCheck;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC10ZXh0YXJlYS9pbnB1dC10ZXh0YXJlYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBUTNDLE1BQU0sT0FBTyxzQkFBc0I7SUFObkM7UUFPbUIsZUFBVSxHQUFXLE1BQU0sQ0FBQztRQUlwQyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakIsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixjQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUM1QixhQUFRLEdBQUc7WUFDbEIsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyxTQUFTLEVBQUUsK0NBQStDO1NBQzNELENBQUM7UUFDTyxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2QixlQUFVLEdBQUcsS0FBSyxDQUFDO0lBVTlCLENBQUM7Ozs7SUFSUSxpQkFBaUI7UUFDdEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsTUFBTSxLQUFLLElBQUk7WUFDOUQsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUMzRyxDQUFDOzs7O0lBRUQsUUFBUTtRQUNOLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ2hGLENBQUM7OztZQS9CRixTQUFTLFNBQUM7O2dCQUVULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLDIxQ0FBOEM7O2FBRS9DOzs7d0JBSUUsS0FBSzswQkFDTCxLQUFLO3VCQUNMLEtBQUs7dUJBQ0wsS0FBSztvQkFDTCxLQUFLO21CQUNMLEtBQUs7bUJBQ0wsS0FBSzt3QkFDTCxLQUFLO3VCQUNMLEtBQUs7NkJBSUwsS0FBSzt5QkFDTCxLQUFLOzs7Ozs7O0lBZk4sNENBQTZDOztJQUU3QywyQ0FBOEI7O0lBQzlCLDZDQUE2Qjs7SUFDN0IsMENBQTBCOztJQUMxQiwwQ0FBMEI7O0lBQzFCLHVDQUF1Qjs7SUFDdkIsc0NBQWtCOztJQUNsQixzQ0FBbUI7O0lBQ25CLDJDQUFxQzs7SUFDckMsMENBR0U7O0lBQ0YsZ0RBQWdDOztJQUNoQyw0Q0FBNEIiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBbmd1bGFyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FuZWYtaW5wdXQtdGV4dGFyZWEnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtdGV4dGFyZWEuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC10ZXh0YXJlYS5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dFRleHRhcmVhQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSByZWFkb25seSBNQVhfTEVOR1RIOiBudW1iZXIgPSA1MjQyODg7XG5cbiAgQElucHV0KCkgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gIEBJbnB1dCgpIGNvbnRyb2xOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHJlcXVpcmVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIHJlYWRvbmx5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHJvd3MgPSA1O1xuICBASW5wdXQoKSBjb2xzID0gMzA7XG4gIEBJbnB1dCgpIG1heExlbmd0aCA9IHRoaXMuTUFYX0xFTkdUSDtcbiAgQElucHV0KCkgbWVzc2FnZXMgPSB7XG4gICAgcmVxdWlyZWQ6ICdDZSBjaGFtcCBlc3Qgb2JsaWdhdG9pcmUnLFxuICAgIG1heExlbmd0aDogJ0xlIG5vbWJyZSBkZSBjYXJhY3TDqHJlcyBhdXRvcmlzw6lzIGVzdCBkw6lwYXNzw6knXG4gIH07XG4gIEBJbnB1dCgpIGRlZmF1bHREaXNwbGF5ID0gJ04vQSc7XG4gIEBJbnB1dCgpIHNwZWxsQ2hlY2sgPSBmYWxzZTtcblxuICBwdWJsaWMgZm9ybUNvbnRhaW5zRXJyb3IoKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLmVycm9ycyAhPT0gbnVsbCAmJlxuICAgICAgKHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLmRpcnR5IHx8IHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLnRvdWNoZWQpO1xuICB9XG5cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLnZhbHVlIHx8IHRoaXMuZGVmYXVsdERpc3BsYXk7XG4gIH1cbn1cbiJdfQ==