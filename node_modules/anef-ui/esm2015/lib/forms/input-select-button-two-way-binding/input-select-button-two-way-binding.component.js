/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-select-button-two-way-binding/input-select-button-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { generateGuid } from '../../shared/guid';
export class InputSelectButtonTwoWayBindingComponent {
    constructor() {
        this.error = null;
        this.multiple = false;
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
    }
    /**
     * @param {?} errors
     * @return {?}
     */
    set errors(errors) {
        if (!errors) {
            this.error = null;
        }
        else if (typeof (errors) === 'string') {
            this.error = [errors];
        }
        else {
            this.error = errors;
        }
    }
    /**
     * @return {?}
     */
    toString() {
        if (!this.options) {
            return '-';
        }
        /** @type {?} */
        const selectedOption = this.options.find((/**
         * @param {?} option
         * @return {?}
         */
        option => this.model === option.value));
        return selectedOption ? selectedOption.label : '-';
    }
}
InputSelectButtonTwoWayBindingComponent.decorators = [
    { type: Component, args: [{
                // tslint:disable-next-line: component-selector
                selector: 'anef-input-select-button-two-way-binding',
                template: "<label *ngIf=\"label\" for=\"{{guid}}\">\n  {{label}} <span *ngIf=\"required && !readonly\" class=\"redish\">*</span> :\n</label>\n\n<div class=\"input\">\n  <div *ngIf=\"!readonly; else textual\" class=\"p-grid\">\n    <p-selectButton\n      (ngModelChange)=\"ngModelChange.emit($event)\"\n      [(ngModel)]=\"model\"\n      [multiple]=\"multiple\"\n      [ngClass]=\"{'error': error && error.length}\"\n      [options]=\"options\"\n      class=\"custom-input-select-button p-col-12\"\n      id=\"{{guid}}\"\n      name=\"{{guid}}\">\n    </p-selectButton>\n  </div>\n\n  <ng-template #textual>\n    <div>{{ toString() }}</div>\n  </ng-template>\n</div>\n\n<div *ngIf=\"error && error.length\" class=\"error redish\">\n  <div *ngFor=\"let errorLine of error\">\n    <p>\n      <i class=\"pi pi-info-circle\"></i>\n      <span>{{errorLine}}</span>\n    </p>\n  </div>\n</div>\n",
                styles: ["label{color:#656565;font-size:1.4rem}.custom-input-select-button{margin-top:-.8rem}"]
            }] }
];
InputSelectButtonTwoWayBindingComponent.propDecorators = {
    model: [{ type: Input }],
    readonly: [{ type: Input }],
    required: [{ type: Input }],
    label: [{ type: Input }],
    multiple: [{ type: Input }],
    options: [{ type: Input }],
    errors: [{ type: Input }],
    ngModelChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.error;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.readonly;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.multiple;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.options;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.guid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LWJ1dHRvbi10d28td2F5LWJpbmRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC1zZWxlY3QtYnV0dG9uLXR3by13YXktYmluZGluZy9pbnB1dC1zZWxlY3QtYnV0dG9uLXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQVNqRCxNQUFNLE9BQU8sdUNBQXVDO0lBTnBEO1FBUUUsVUFBSyxHQUFHLElBQUksQ0FBQztRQU1KLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFXaEIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTdDLFNBQUksR0FBRyxZQUFZLEVBQUUsQ0FBQztJQVN4QixDQUFDOzs7OztJQXBCQyxJQUFhLE1BQU0sQ0FBQyxNQUE4QjtRQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ1gsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7U0FDbkI7YUFBTSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxRQUFRLEVBQUU7WUFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1NBQ3ZCO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQztTQUNyQjtJQUNILENBQUM7Ozs7SUFLRCxRQUFRO1FBQ04sSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDakIsT0FBTyxHQUFHLENBQUM7U0FDWjs7Y0FDSyxjQUFjLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJOzs7O1FBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLE1BQU0sQ0FBQyxLQUFLLEVBQUM7UUFDL0UsT0FBTyxjQUFjLENBQUMsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztJQUNyRCxDQUFDOzs7WUFuQ0YsU0FBUyxTQUFDOztnQkFFVCxRQUFRLEVBQUUsMENBQTBDO2dCQUNwRCx5M0JBQW1FOzthQUVwRTs7O29CQUtFLEtBQUs7dUJBQ0wsS0FBSzt1QkFDTCxLQUFLO29CQUNMLEtBQUs7dUJBQ0wsS0FBSztzQkFDTCxLQUFLO3FCQUNMLEtBQUs7NEJBU0wsTUFBTTs7OztJQWpCUCx3REFBYTs7SUFFYix3REFBd0I7O0lBQ3hCLDJEQUEyQjs7SUFDM0IsMkRBQTBCOztJQUMxQix3REFBdUI7O0lBQ3ZCLDJEQUEwQjs7SUFDMUIsMERBQStCOztJQVUvQixnRUFBNkM7O0lBRTdDLHVEQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgZ2VuZXJhdGVHdWlkIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2d1aWQnO1xuXG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FuZWYtaW5wdXQtc2VsZWN0LWJ1dHRvbi10d28td2F5LWJpbmRpbmcnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtc2VsZWN0LWJ1dHRvbi10d28td2F5LWJpbmRpbmcuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1zZWxlY3QtYnV0dG9uLXR3by13YXktYmluZGluZy5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIElucHV0U2VsZWN0QnV0dG9uVHdvV2F5QmluZGluZ0NvbXBvbmVudCB7XG5cbiAgZXJyb3IgPSBudWxsO1xuXG4gIEBJbnB1dCgpIG1vZGVsOiBib29sZWFuO1xuICBASW5wdXQoKSByZWFkb25seTogYm9vbGVhbjtcbiAgQElucHV0KCkgcmVxdWlyZWQ6IHN0cmluZztcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgbXVsdGlwbGUgPSBmYWxzZTtcbiAgQElucHV0KCkgb3B0aW9uczogU2VsZWN0SXRlbVtdO1xuICBASW5wdXQoKSBzZXQgZXJyb3JzKGVycm9yczogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPikge1xuICAgIGlmICghZXJyb3JzKSB7XG4gICAgICB0aGlzLmVycm9yID0gbnVsbDtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiAoZXJyb3JzKSA9PT0gJ3N0cmluZycpIHtcbiAgICAgIHRoaXMuZXJyb3IgPSBbZXJyb3JzXTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5lcnJvciA9IGVycm9ycztcbiAgICB9XG4gIH1cbiAgQE91dHB1dCgpIG5nTW9kZWxDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZ3VpZCA9IGdlbmVyYXRlR3VpZCgpO1xuXG4gIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgaWYgKCF0aGlzLm9wdGlvbnMpIHtcbiAgICAgIHJldHVybiAnLSc7XG4gICAgfVxuICAgIGNvbnN0IHNlbGVjdGVkT3B0aW9uID0gdGhpcy5vcHRpb25zLmZpbmQob3B0aW9uID0+IHRoaXMubW9kZWwgPT09IG9wdGlvbi52YWx1ZSk7XG4gICAgcmV0dXJuIHNlbGVjdGVkT3B0aW9uID8gc2VsZWN0ZWRPcHRpb24ubGFiZWwgOiAnLSc7XG4gIH1cbn1cbiJdfQ==