/**
 * @fileoverview added by tsickle
 * Generated from: lib/error-modal/error-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class ErrorModalComponent {
    constructor() {
        this.displayErrorChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    onClose() {
        this.displayErrorChange.emit(false);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.displayErrorChange.unsubscribe();
    }
}
ErrorModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-error-modal',
                template: "<p-dialog class=\"modalAlert\"\n          appendTo=\"body\"\n          [showHeader]=\"false\"\n          [(visible)]=\"displayError\"\n          [modal]=\"true\"\n          [closable]=\"false\"\n          [responsive]=\"true\"\n          [style]=\"{width: '60rem', minWidth: '28rem'}\" [minY]=\"70\"\n          [baseZIndex]=\"10000\">\n\n  <div class=\"alertHeader\"\n    >{{ title }}\n  </div>\n  \n  <div class=\"msgBox alert\">\n    <span class=\"fa fa-exclamation-triangle\"></span>\n    <p>{{titleCheck}}</p>\n  </div>\n  <p class=\"bold\">{{textBold | trim}}.</p>\n  <p>{{text | trim}}.</p>\n  <p *ngIf=\"facultativeText\">{{facultativeText}}</p>\n  <p-footer>\n    <button type=\"button\" pButton (click)=\"onClose()\" label=\"{{labelBtn}}\"></button>\n  </p-footer>\n</p-dialog>\n",
                styles: [""]
            }] }
];
/** @nocollapse */
ErrorModalComponent.ctorParameters = () => [];
ErrorModalComponent.propDecorators = {
    displayError: [{ type: Input }],
    title: [{ type: Input }],
    titleCheck: [{ type: Input }],
    text: [{ type: Input }],
    facultativeText: [{ type: Input }],
    labelBtn: [{ type: Input }],
    textBold: [{ type: Input }],
    displayErrorChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    ErrorModalComponent.prototype.displayError;
    /** @type {?} */
    ErrorModalComponent.prototype.title;
    /** @type {?} */
    ErrorModalComponent.prototype.titleCheck;
    /** @type {?} */
    ErrorModalComponent.prototype.text;
    /** @type {?} */
    ErrorModalComponent.prototype.facultativeText;
    /** @type {?} */
    ErrorModalComponent.prototype.labelBtn;
    /** @type {?} */
    ErrorModalComponent.prototype.textBold;
    /** @type {?} */
    ErrorModalComponent.prototype.displayErrorChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9lcnJvci1tb2RhbC9lcnJvci1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBT2xGLE1BQU0sT0FBTyxtQkFBbUI7SUFVOUI7UUFGVSx1QkFBa0IsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBRWxDLENBQUM7Ozs7SUFHakIsT0FBTztRQUNMLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDdEMsQ0FBQzs7OztJQUVELFdBQVc7UUFDVCxJQUFJLENBQUMsa0JBQWtCLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDeEMsQ0FBQzs7O1lBeEJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixneUJBQTJDOzthQUU1Qzs7Ozs7MkJBRUUsS0FBSztvQkFDTCxLQUFLO3lCQUNMLEtBQUs7bUJBQ0wsS0FBSzs4QkFDTCxLQUFLO3VCQUNMLEtBQUs7dUJBQ0wsS0FBSztpQ0FDTCxNQUFNOzs7O0lBUFAsMkNBQStCOztJQUMvQixvQ0FBdUI7O0lBQ3ZCLHlDQUE0Qjs7SUFDNUIsbUNBQXNCOztJQUN0Qiw4Q0FBaUM7O0lBQ2pDLHVDQUEwQjs7SUFDMUIsdUNBQTBCOztJQUMxQixpREFBa0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT3V0cHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2xpYi1lcnJvci1tb2RhbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9lcnJvci1tb2RhbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Vycm9yLW1vZGFsLmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBFcnJvck1vZGFsQ29tcG9uZW50ICAgaW1wbGVtZW50cyBPbkRlc3Ryb3kgIHtcbiAgQElucHV0KCkgZGlzcGxheUVycm9yOiBib29sZWFuO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZUNoZWNrOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRleHQ6IHN0cmluZztcbiAgQElucHV0KCkgZmFjdWx0YXRpdmVUZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsQnRuOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHRleHRCb2xkOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBkaXNwbGF5RXJyb3JDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuXG4gIG9uQ2xvc2UoKSB7XG4gICAgdGhpcy5kaXNwbGF5RXJyb3JDaGFuZ2UuZW1pdChmYWxzZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRpc3BsYXlFcnJvckNoYW5nZS51bnN1YnNjcmliZSgpO1xuICB9XG59XG4iXX0=