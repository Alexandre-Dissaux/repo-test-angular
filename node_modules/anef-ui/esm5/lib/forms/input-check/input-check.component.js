/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-check/input-check.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
var InputCheckComponent = /** @class */ (function () {
    function InputCheckComponent() {
        this.required = false;
        this.readonly = false;
        this.disableCheckbox = false;
        this.binary = false;
        this.messages = {
            required: 'Ce champ est obligatoire'
        };
    }
    /**
     * @return {?}
     */
    InputCheckComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.name) {
            this.name = this.controlName;
        }
        if (this.disableCheckbox) {
            this.formGroup.controls[this.controlName].disable();
        }
    };
    Object.defineProperty(InputCheckComponent.prototype, "icon", {
        get: /**
         * @return {?}
         */
        function () {
            return this.option.icon || 'pi pi-check';
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    InputCheckComponent.prototype.formContainsError = /**
     * @return {?}
     */
    function () {
        return this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched);
    };
    /**
     * @return {?}
     */
    InputCheckComponent.prototype.toString = /**
     * @return {?}
     */
    function () {
        return this.option.label;
    };
    InputCheckComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-check',
                    template: "<div class=\"p-grid nogutter\" *ngIf=[formGroup] [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" class=\"radio-label\" [htmlFor]=\"controlName\">\n      {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n    </label>\n\n    <ng-content select=\"[sub-label]\"></ng-content>\n\n    <p-checkbox *ngIf=\"!readonly; else textual\"\n                [name]=\"name\"\n                [value]=\"option.value\"\n                [label]=\"option.label\"\n                [formControlName]=\"controlName\"\n                [checkboxIcon]=\"icon\"\n                [binary]=\"binary\"\n                [styleClass]=\"option.styleClass\">\n    </p-checkbox>\n    <ng-template #textual>\n      <span class=\"textual\">{{toString()}}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                    styles: ["label{width:100%}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}"]
                }] }
    ];
    InputCheckComponent.propDecorators = {
        formGroup: [{ type: Input }],
        controlName: [{ type: Input }],
        name: [{ type: Input }],
        required: [{ type: Input }],
        readonly: [{ type: Input }],
        disableCheckbox: [{ type: Input }],
        label: [{ type: Input }],
        option: [{ type: Input }],
        binary: [{ type: Input }],
        messages: [{ type: Input }]
    };
    return InputCheckComponent;
}());
export { InputCheckComponent };
if (false) {
    /** @type {?} */
    InputCheckComponent.prototype.formGroup;
    /** @type {?} */
    InputCheckComponent.prototype.controlName;
    /** @type {?} */
    InputCheckComponent.prototype.name;
    /** @type {?} */
    InputCheckComponent.prototype.required;
    /** @type {?} */
    InputCheckComponent.prototype.readonly;
    /** @type {?} */
    InputCheckComponent.prototype.disableCheckbox;
    /** @type {?} */
    InputCheckComponent.prototype.label;
    /** @type {?} */
    InputCheckComponent.prototype.option;
    /** @type {?} */
    InputCheckComponent.prototype.binary;
    /** @type {?} */
    InputCheckComponent.prototype.messages;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY2hlY2suY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC1jaGVjay9pbnB1dC1jaGVjay5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzNDO0lBQUE7UUFVVyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFDakIsb0JBQWUsR0FBRyxLQUFLLENBQUM7UUFHeEIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLGFBQVEsR0FBRztZQUNsQixRQUFRLEVBQUUsMEJBQTBCO1NBQ3JDLENBQUM7SUFxQkosQ0FBQzs7OztJQW5CQyxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNkLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUM5QjtRQUNELElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDckQ7SUFDSCxDQUFDO0lBQ0Qsc0JBQUkscUNBQUk7Ozs7UUFBUjtZQUNFLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUksYUFBYSxDQUFDO1FBQzNDLENBQUM7OztPQUFBOzs7O0lBQ00sK0NBQWlCOzs7SUFBeEI7UUFDRSxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEtBQUssSUFBSTtZQUNoRSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3pHLENBQUM7Ozs7SUFFRCxzQ0FBUTs7O0lBQVI7UUFDRSxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0lBQzNCLENBQUM7O2dCQXRDRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLHFzQ0FBMkM7O2lCQUU1Qzs7OzRCQUVFLEtBQUs7OEJBQ0wsS0FBSzt1QkFDTCxLQUFLOzJCQUNMLEtBQUs7MkJBQ0wsS0FBSztrQ0FDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsS0FBSzt5QkFDTCxLQUFLOzJCQUNMLEtBQUs7O0lBdUJSLDBCQUFDO0NBQUEsQUF2Q0QsSUF1Q0M7U0FqQ1ksbUJBQW1COzs7SUFDOUIsd0NBQThCOztJQUM5QiwwQ0FBNkI7O0lBQzdCLG1DQUFzQjs7SUFDdEIsdUNBQTBCOztJQUMxQix1Q0FBMEI7O0lBQzFCLDhDQUFpQzs7SUFDakMsb0NBQXVCOztJQUN2QixxQ0FBNEI7O0lBQzVCLHFDQUF3Qjs7SUFDeEIsdUNBRUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbi8vIEFuZ3VsYXJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFNlbGVjdEl0ZW0gfSBmcm9tICdwcmltZW5nL2FwaSc7XG5cbkBDb21wb25lbnQoe1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IGNvbXBvbmVudC1zZWxlY3RvclxuICBzZWxlY3RvcjogJ2FuZWYtaW5wdXQtY2hlY2snLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtY2hlY2suY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1jaGVjay5jb21wb25lbnQuc2NzcyddLFxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dENoZWNrQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gIEBJbnB1dCgpIGNvbnRyb2xOYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgcmVxdWlyZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZUNoZWNrYm94ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG9wdGlvbjogU2VsZWN0SXRlbTtcbiAgQElucHV0KCkgYmluYXJ5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIG1lc3NhZ2VzID0ge1xuICAgIHJlcXVpcmVkOiAnQ2UgY2hhbXAgZXN0IG9ibGlnYXRvaXJlJ1xuICB9O1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5uYW1lKSB7XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnRyb2xOYW1lO1xuICAgIH1cbiAgICBpZiAodGhpcy5kaXNhYmxlQ2hlY2tib3gpIHtcbiAgICAgIHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLmRpc2FibGUoKTtcbiAgICB9XG4gIH1cbiAgZ2V0IGljb24oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb24uaWNvbiB8fCAncGkgcGktY2hlY2snO1xuICB9XG4gIHB1YmxpYyBmb3JtQ29udGFpbnNFcnJvcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5mb3JtR3JvdXAuY29udHJvbHNbdGhpcy5jb250cm9sTmFtZV0uZXJyb3JzICE9PSBudWxsICYmXG4gICAgKHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLmRpcnR5IHx8IHRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdLnRvdWNoZWQpO1xuICB9XG5cbiAgdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMub3B0aW9uLmxhYmVsO1xuICB9XG59XG4iXX0=