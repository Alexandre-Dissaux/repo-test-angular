/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-radio/input-radio.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
var InputRadioComponent = /** @class */ (function () {
    function InputRadioComponent() {
        this.required = false;
        this.readonly = false;
        this.column = false;
        this.spread = false;
        this.messages = {
            required: 'Ce champ est obligatoire'
        };
        this.defaultDisplay = 'N/A';
        this.classStyle = false;
    }
    /**
     * @return {?}
     */
    InputRadioComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.name) {
            this.name = this.controlName;
        }
    };
    /**
     * @return {?}
     */
    InputRadioComponent.prototype.formContainsError = /**
     * @return {?}
     */
    function () {
        return (!!this.formGroup &&
            !!this.formGroup.controls[this.controlName] &&
            this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched));
    };
    /**
     * @return {?}
     */
    InputRadioComponent.prototype.toString = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var found = null;
        if (this.formGroup && this.controlName && this.options) {
            /** @type {?} */
            var value_1 = this.formGroup.controls[this.controlName].value;
            found = (this.options && this.options.filter((/**
             * @param {?} option
             * @return {?}
             */
            function (option) { return option.value === value_1; }))[0]) || null;
        }
        return (found && found.label) || this.defaultDisplay;
    };
    InputRadioComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-radio',
                    template: "<div class=\"p-grid nogutter\" *ngIf=\"formGroup\" [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <fieldset>\n      <legend *ngIf=\"label\" class=\"radio-label\">\n          {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n      </legend>\n      <ng-content select=\"[sub-label]\"></ng-content>\n\n      <div *ngIf=\"!readonly; else textual\"\n          class=\"p-grid nogutter\" [ngClass]=\"{'p-dir-col': column}\">\n        <ng-container *ngFor=\"let option of options\">\n          <div class=\"p-col\" [ngClass]=\"{'no-col': !spread, 'classStyle': classStyle}\">\n            <p-radioButton [name]=\"name\"\n                          [value]=\"option.value\"\n                          [label]=\"option.label\"\n                          [formControlName]=\"controlName\"\n                          [styleClass]=\"option.styleClass\">\n            </p-radioButton>\n          </div>\n        </ng-container>\n      </div>\n    </fieldset>\n    <ng-template #textual>\n      <span class=\"textual\">{{toString()}}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                    styles: ["label{width:100%}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}fieldset,legend{margin:0;padding:0;border:0}fieldset legend{border-bottom:0}.classStyle{padding-right:2rem}"]
                }] }
    ];
    InputRadioComponent.propDecorators = {
        formGroup: [{ type: Input }],
        controlName: [{ type: Input }],
        name: [{ type: Input }],
        required: [{ type: Input }],
        readonly: [{ type: Input }],
        label: [{ type: Input }],
        column: [{ type: Input }],
        spread: [{ type: Input }],
        options: [{ type: Input }],
        messages: [{ type: Input }],
        defaultDisplay: [{ type: Input }],
        classStyle: [{ type: Input }]
    };
    return InputRadioComponent;
}());
export { InputRadioComponent };
if (false) {
    /** @type {?} */
    InputRadioComponent.prototype.formGroup;
    /** @type {?} */
    InputRadioComponent.prototype.controlName;
    /** @type {?} */
    InputRadioComponent.prototype.name;
    /** @type {?} */
    InputRadioComponent.prototype.required;
    /** @type {?} */
    InputRadioComponent.prototype.readonly;
    /** @type {?} */
    InputRadioComponent.prototype.label;
    /** @type {?} */
    InputRadioComponent.prototype.column;
    /** @type {?} */
    InputRadioComponent.prototype.spread;
    /** @type {?} */
    InputRadioComponent.prototype.options;
    /** @type {?} */
    InputRadioComponent.prototype.messages;
    /** @type {?} */
    InputRadioComponent.prototype.defaultDisplay;
    /** @type {?} */
    InputRadioComponent.prototype.classStyle;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtcmFkaW8uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC1yYWRpby9pbnB1dC1yYWRpby5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRzNDO0lBQUE7UUFVVyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFFZixhQUFRLEdBQUc7WUFDbEIsUUFBUSxFQUFFLDBCQUEwQjtTQUNyQyxDQUFDO1FBQ08sbUJBQWMsR0FBRyxLQUFLLENBQUM7UUFDdkIsZUFBVSxHQUFHLEtBQUssQ0FBQztJQXlCOUIsQ0FBQzs7OztJQXZCQyxzQ0FBUTs7O0lBQVI7UUFDRSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRTtZQUNkLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUM5QjtJQUNILENBQUM7Ozs7SUFFRCwrQ0FBaUI7OztJQUFqQjtRQUNFLE9BQU8sQ0FDTCxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVM7WUFDaEIsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUM7WUFDM0MsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxJQUFJO1lBQ3pELENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQ3ZHLENBQUM7SUFDSixDQUFDOzs7O0lBRUQsc0NBQVE7OztJQUFSOztZQUNNLEtBQUssR0FBRyxJQUFJO1FBQ2hCLElBQUksSUFBSSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsV0FBVyxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7O2dCQUNoRCxPQUFLLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUs7WUFDN0QsS0FBSyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU07Ozs7WUFBQyxVQUFBLE1BQU0sSUFBSSxPQUFBLE1BQU0sQ0FBQyxLQUFLLEtBQUssT0FBSyxFQUF0QixDQUFzQixFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7U0FDNUY7UUFDRCxPQUFPLENBQUMsS0FBSyxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ3ZELENBQUM7O2dCQTVDRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLDQ5Q0FBMkM7O2lCQUU1Qzs7OzRCQUVFLEtBQUs7OEJBQ0wsS0FBSzt1QkFDTCxLQUFLOzJCQUNMLEtBQUs7MkJBQ0wsS0FBSzt3QkFDTCxLQUFLO3lCQUNMLEtBQUs7eUJBQ0wsS0FBSzswQkFDTCxLQUFLOzJCQUNMLEtBQUs7aUNBR0wsS0FBSzs2QkFDTCxLQUFLOztJQXlCUiwwQkFBQztDQUFBLEFBN0NELElBNkNDO1NBdkNZLG1CQUFtQjs7O0lBQzlCLHdDQUE4Qjs7SUFDOUIsMENBQTZCOztJQUM3QixtQ0FBc0I7O0lBQ3RCLHVDQUEwQjs7SUFDMUIsdUNBQTBCOztJQUMxQixvQ0FBdUI7O0lBQ3ZCLHFDQUF3Qjs7SUFDeEIscUNBQXdCOztJQUN4QixzQ0FBK0I7O0lBQy9CLHVDQUVFOztJQUNGLDZDQUFnQzs7SUFDaEMseUNBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG4vLyBBbmd1bGFyXG5pbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdhbmVmLWlucHV0LXJhZGlvJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LXJhZGlvLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQtcmFkaW8uY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRSYWRpb0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICBASW5wdXQoKSBjb250cm9sTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIHJlcXVpcmVkID0gZmFsc2U7XG4gIEBJbnB1dCgpIHJlYWRvbmx5ID0gZmFsc2U7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbHVtbiA9IGZhbHNlO1xuICBASW5wdXQoKSBzcHJlYWQgPSBmYWxzZTtcbiAgQElucHV0KCkgb3B0aW9uczogU2VsZWN0SXRlbVtdO1xuICBASW5wdXQoKSBtZXNzYWdlcyA9IHtcbiAgICByZXF1aXJlZDogJ0NlIGNoYW1wIGVzdCBvYmxpZ2F0b2lyZSdcbiAgfTtcbiAgQElucHV0KCkgZGVmYXVsdERpc3BsYXkgPSAnTi9BJztcbiAgQElucHV0KCkgY2xhc3NTdHlsZSA9IGZhbHNlO1xuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIGlmICghdGhpcy5uYW1lKSB7XG4gICAgICB0aGlzLm5hbWUgPSB0aGlzLmNvbnRyb2xOYW1lO1xuICAgIH1cbiAgfVxuXG4gIGZvcm1Db250YWluc0Vycm9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiAoXG4gICAgICAhIXRoaXMuZm9ybUdyb3VwICYmXG4gICAgICAhIXRoaXMuZm9ybUdyb3VwLmNvbnRyb2xzW3RoaXMuY29udHJvbE5hbWVdICYmXG4gICAgICB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5lcnJvcnMgIT09IG51bGwgJiZcbiAgICAgICh0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5kaXJ0eSB8fCB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS50b3VjaGVkKVxuICAgICk7XG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICBsZXQgZm91bmQgPSBudWxsO1xuICAgIGlmICh0aGlzLmZvcm1Hcm91cCAmJiB0aGlzLmNvbnRyb2xOYW1lICYmIHRoaXMub3B0aW9ucykge1xuICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS52YWx1ZTtcbiAgICAgIGZvdW5kID0gKHRoaXMub3B0aW9ucyAmJiB0aGlzLm9wdGlvbnMuZmlsdGVyKG9wdGlvbiA9PiBvcHRpb24udmFsdWUgPT09IHZhbHVlKVswXSkgfHwgbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIChmb3VuZCAmJiBmb3VuZC5sYWJlbCkgfHwgdGhpcy5kZWZhdWx0RGlzcGxheTtcbiAgfVxufVxuIl19