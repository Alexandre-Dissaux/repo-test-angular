/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-check-two-way-binding/input-check-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { generateGuid } from '../../shared/guid';
var InputCheckTwoWayBindingComponent = /** @class */ (function () {
    function InputCheckTwoWayBindingComponent() {
        this.required = false;
        this.readonly = false;
        this.errors = [];
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
    }
    Object.defineProperty(InputCheckTwoWayBindingComponent.prototype, "icon", {
        get: /**
         * @return {?}
         */
        function () {
            return this.option.icon || 'pi pi-check';
        },
        enumerable: true,
        configurable: true
    });
    InputCheckTwoWayBindingComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-check-two-way-binding',
                    template: "<div class=\"p-grid nogutter\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" class=\"radio-label\" for=\"{{guid}}\">\n      {{label}} <span *ngIf=\"required && !readonly\" class=\"redish\">*</span> :\n    </label>\n\n    <div class=\"input\">\n      <p-checkbox (ngModelChange)=\"ngModelChange.emit($event)\"\n                  [(ngModel)]=\"model\"\n                  [checkboxIcon]=\"icon\"\n                  [label]=\"option.label\"\n                  [ngClass]=\"{'error': errors.length}\"\n                  [readonly]=\"readonly\"\n                  [styleClass]=\"option.styleClass\"\n                  id=\"{{guid}}\"\n                  name=\"{{guid}}\">\n      </p-checkbox>\n    </div>\n\n    <div *ngIf=\"errors.length\" class=\"error redish\">\n      <div *ngFor=\"let error of errors\">\n        <p>\n          <i class=\"pi pi-info-circle\"></i>\n          <span>{{error}}</span>\n        </p>\n      </div>\n    </div>\n\n  </div>\n</div>\n",
                    styles: ["label{width:100%;color:#656565;font-size:1.4rem}.no-col{flex-grow:initial;flex-basis:initial}.textual{display:block}"]
                }] }
    ];
    InputCheckTwoWayBindingComponent.propDecorators = {
        model: [{ type: Input }],
        name: [{ type: Input }],
        required: [{ type: Input }],
        readonly: [{ type: Input }],
        label: [{ type: Input }],
        option: [{ type: Input }],
        errors: [{ type: Input }],
        ngModelChange: [{ type: Output }]
    };
    return InputCheckTwoWayBindingComponent;
}());
export { InputCheckTwoWayBindingComponent };
if (false) {
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.name;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.readonly;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.option;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.errors;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputCheckTwoWayBindingComponent.prototype.guid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nL2lucHV0LWNoZWNrLXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBSXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUVqRDtJQUFBO1FBU1csYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFDWCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFN0MsU0FBSSxHQUFHLFlBQVksRUFBRSxDQUFDO0lBS3hCLENBQUM7SUFIQyxzQkFBSSxrREFBSTs7OztRQUFSO1lBQ0UsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksSUFBSSxhQUFhLENBQUM7UUFDM0MsQ0FBQzs7O09BQUE7O2dCQXBCRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLG85QkFBMkQ7O2lCQUU1RDs7O3dCQUVFLEtBQUs7dUJBQ0wsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLEtBQUs7d0JBQ0wsS0FBSzt5QkFDTCxLQUFLO3lCQUNMLEtBQUs7Z0NBQ0wsTUFBTTs7SUFPVCx1Q0FBQztDQUFBLEFBckJELElBcUJDO1NBZlksZ0NBQWdDOzs7SUFDM0MsaURBQW9COztJQUNwQixnREFBc0I7O0lBQ3RCLG9EQUEwQjs7SUFDMUIsb0RBQTBCOztJQUMxQixpREFBdUI7O0lBQ3ZCLGtEQUE0Qjs7SUFDNUIsa0RBQXFCOztJQUNyQix5REFBNkM7O0lBRTdDLGdEQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE91dHB1dCwgRXZlbnRFbWl0dGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFNlbGVjdEl0ZW0gfSBmcm9tICdwcmltZW5nL2FwaSc7XG5cbmltcG9ydCB7IGdlbmVyYXRlR3VpZCB9IGZyb20gJy4uLy4uL3NoYXJlZC9ndWlkJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnYW5lZi1pbnB1dC1jaGVjay10d28td2F5LWJpbmRpbmcnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQtY2hlY2stdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0Q2hlY2tUd29XYXlCaW5kaW5nQ29tcG9uZW50IHtcbiAgQElucHV0KCkgbW9kZWw6IGFueTtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSByZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBvcHRpb246IFNlbGVjdEl0ZW07XG4gIEBJbnB1dCgpIGVycm9ycyA9IFtdO1xuICBAT3V0cHV0KCkgbmdNb2RlbENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBndWlkID0gZ2VuZXJhdGVHdWlkKCk7XG5cbiAgZ2V0IGljb24oKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb24uaWNvbiB8fCAncGkgcGktY2hlY2snO1xuICB9XG59XG4iXX0=