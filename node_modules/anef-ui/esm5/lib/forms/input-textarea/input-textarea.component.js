/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-textarea/input-textarea.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
var InputTextareaComponent = /** @class */ (function () {
    function InputTextareaComponent() {
        this.MAX_LENGTH = 524288;
        this.required = false;
        this.readonly = false;
        this.rows = 5;
        this.cols = 30;
        this.maxLength = this.MAX_LENGTH;
        this.messages = {
            required: 'Ce champ est obligatoire',
            maxLength: 'Le nombre de caractères autorisés est dépassé'
        };
        this.defaultDisplay = 'N/A';
        this.spellCheck = false;
    }
    /**
     * @return {?}
     */
    InputTextareaComponent.prototype.formContainsError = /**
     * @return {?}
     */
    function () {
        return this.formGroup.controls[this.controlName].errors !== null &&
            (this.formGroup.controls[this.controlName].dirty || this.formGroup.controls[this.controlName].touched);
    };
    /**
     * @return {?}
     */
    InputTextareaComponent.prototype.toString = /**
     * @return {?}
     */
    function () {
        return this.formGroup.controls[this.controlName].value || this.defaultDisplay;
    };
    InputTextareaComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-textarea',
                    template: "<div class=\"p-grid nogutter\" [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" [htmlFor]=\"controlName\">\n      {{label}} <span class=\"redish\" *ngIf=\"required\">*</span> :\n    </label>\n\n    <ng-content select=\"[sub-label]\"></ng-content>\n\n    <textarea *ngIf=\"!readonly; else textual\"\n              [id]=\"controlName\"\n              type=\"text\"\n              pInputTextarea\n              [rows]=\"rows\"\n              [cols]=\"cols\"\n              [maxLength]=\"maxLength\"\n              [formControlName]=\"controlName\"\n              [spellcheck]=\"spellCheck\"></textarea>\n    <ng-template #textual>\n      <span class=\"textual\">{{ toString() }}</span>\n    </ng-template>\n\n    <ng-content select=\"[complement]\"></ng-content>\n\n    <div class=\"redish errors\" *ngIf=\"formContainsError()\">\n      <div *ngIf=\"formGroup.controls[controlName].errors.required\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.required}} </span>\n      </div>\n      <div *ngIf=\"formGroup.controls[controlName].errors.maxlength\">\n        <i class=\"fa fa-exclamation-circle\" aria-hidden=\"true\"></i>\n        <span> {{messages.maxLength}} </span>\n      </div>\n\n      <ng-content select=\"[messages]\"></ng-content>\n    </div>\n  </div>\n</div>\n",
                    styles: [".textual{display:block}"]
                }] }
    ];
    InputTextareaComponent.propDecorators = {
        formGroup: [{ type: Input }],
        controlName: [{ type: Input }],
        required: [{ type: Input }],
        readonly: [{ type: Input }],
        label: [{ type: Input }],
        rows: [{ type: Input }],
        cols: [{ type: Input }],
        maxLength: [{ type: Input }],
        messages: [{ type: Input }],
        defaultDisplay: [{ type: Input }],
        spellCheck: [{ type: Input }]
    };
    return InputTextareaComponent;
}());
export { InputTextareaComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    InputTextareaComponent.prototype.MAX_LENGTH;
    /** @type {?} */
    InputTextareaComponent.prototype.formGroup;
    /** @type {?} */
    InputTextareaComponent.prototype.controlName;
    /** @type {?} */
    InputTextareaComponent.prototype.required;
    /** @type {?} */
    InputTextareaComponent.prototype.readonly;
    /** @type {?} */
    InputTextareaComponent.prototype.label;
    /** @type {?} */
    InputTextareaComponent.prototype.rows;
    /** @type {?} */
    InputTextareaComponent.prototype.cols;
    /** @type {?} */
    InputTextareaComponent.prototype.maxLength;
    /** @type {?} */
    InputTextareaComponent.prototype.messages;
    /** @type {?} */
    InputTextareaComponent.prototype.defaultDisplay;
    /** @type {?} */
    InputTextareaComponent.prototype.spellCheck;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtdGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC10ZXh0YXJlYS9pbnB1dC10ZXh0YXJlYS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTNDO0lBQUE7UUFPbUIsZUFBVSxHQUFXLE1BQU0sQ0FBQztRQUlwQyxhQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ2pCLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFFakIsU0FBSSxHQUFHLENBQUMsQ0FBQztRQUNULFNBQUksR0FBRyxFQUFFLENBQUM7UUFDVixjQUFTLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQztRQUM1QixhQUFRLEdBQUc7WUFDbEIsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyxTQUFTLEVBQUUsK0NBQStDO1NBQzNELENBQUM7UUFDTyxtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUN2QixlQUFVLEdBQUcsS0FBSyxDQUFDO0lBVTlCLENBQUM7Ozs7SUFSUSxrREFBaUI7OztJQUF4QjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sS0FBSyxJQUFJO1lBQzlELENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDM0csQ0FBQzs7OztJQUVELHlDQUFROzs7SUFBUjtRQUNFLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsY0FBYyxDQUFDO0lBQ2hGLENBQUM7O2dCQS9CRixTQUFTLFNBQUM7O29CQUVULFFBQVEsRUFBRSxxQkFBcUI7b0JBQy9CLDIxQ0FBOEM7O2lCQUUvQzs7OzRCQUlFLEtBQUs7OEJBQ0wsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3VCQUNMLEtBQUs7NEJBQ0wsS0FBSzsyQkFDTCxLQUFLO2lDQUlMLEtBQUs7NkJBQ0wsS0FBSzs7SUFVUiw2QkFBQztDQUFBLEFBaENELElBZ0NDO1NBMUJZLHNCQUFzQjs7Ozs7O0lBQ2pDLDRDQUE2Qzs7SUFFN0MsMkNBQThCOztJQUM5Qiw2Q0FBNkI7O0lBQzdCLDBDQUEwQjs7SUFDMUIsMENBQTBCOztJQUMxQix1Q0FBdUI7O0lBQ3ZCLHNDQUFrQjs7SUFDbEIsc0NBQW1COztJQUNuQiwyQ0FBcUM7O0lBQ3JDLDBDQUdFOztJQUNGLGdEQUFnQzs7SUFDaEMsNENBQTRCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQW5ndWxhclxuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUdyb3VwIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdhbmVmLWlucHV0LXRleHRhcmVhJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LXRleHRhcmVhLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQtdGV4dGFyZWEuY29tcG9uZW50LnNjc3MnXSxcbn0pXG5leHBvcnQgY2xhc3MgSW5wdXRUZXh0YXJlYUNvbXBvbmVudCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgTUFYX0xFTkdUSDogbnVtYmVyID0gNTI0Mjg4O1xuXG4gIEBJbnB1dCgpIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICBASW5wdXQoKSBjb250cm9sTmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSByZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSByZWFkb25seSA9IGZhbHNlO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSByb3dzID0gNTtcbiAgQElucHV0KCkgY29scyA9IDMwO1xuICBASW5wdXQoKSBtYXhMZW5ndGggPSB0aGlzLk1BWF9MRU5HVEg7XG4gIEBJbnB1dCgpIG1lc3NhZ2VzID0ge1xuICAgIHJlcXVpcmVkOiAnQ2UgY2hhbXAgZXN0IG9ibGlnYXRvaXJlJyxcbiAgICBtYXhMZW5ndGg6ICdMZSBub21icmUgZGUgY2FyYWN0w6hyZXMgYXV0b3Jpc8OpcyBlc3QgZMOpcGFzc8OpJ1xuICB9O1xuICBASW5wdXQoKSBkZWZhdWx0RGlzcGxheSA9ICdOL0EnO1xuICBASW5wdXQoKSBzcGVsbENoZWNrID0gZmFsc2U7XG5cbiAgcHVibGljIGZvcm1Db250YWluc0Vycm9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5lcnJvcnMgIT09IG51bGwgJiZcbiAgICAgICh0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS5kaXJ0eSB8fCB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS50b3VjaGVkKTtcbiAgfVxuXG4gIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLmZvcm1Hcm91cC5jb250cm9sc1t0aGlzLmNvbnRyb2xOYW1lXS52YWx1ZSB8fCB0aGlzLmRlZmF1bHREaXNwbGF5O1xuICB9XG59XG4iXX0=