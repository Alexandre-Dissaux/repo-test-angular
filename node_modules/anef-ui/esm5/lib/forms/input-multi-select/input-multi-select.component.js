/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-multi-select/input-multi-select.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// Angular
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
/**
 * @record
 */
export function MultiSelectOption() { }
if (false) {
    /** @type {?} */
    MultiSelectOption.prototype.label;
    /** @type {?} */
    MultiSelectOption.prototype.value;
}
var InputMultiSelectComponent = /** @class */ (function () {
    function InputMultiSelectComponent() {
        this.filter = false;
        this.maxSelectedItemsLabel = '{0} éléments sélectionnés';
        this.defaultLabel = 'Choisir';
    }
    InputMultiSelectComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'input-multi-select',
                    template: "<div class=\"p-grid nogutter\" *ngIf=[formGroup] [formGroup]=\"formGroup\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" class=\"multi-select-label\" [htmlFor]=\"controlName\">\n      {{label}} :\n    </label>\n\n    <p-multiSelect\n      [filter]=\"filter\"\n      [defaultLabel]=\"defaultLabel\"\n      [selectedItemsLabel]=\"maxSelectedItemsLabel\"\n      [options]=\"option\"\n      [formControlName]=\"controlName\"\n      class=\"multiselect-custom\">\n      <ng-template let-item pTemplate=\"item\">\n        <div class=\"item-value\">\n          <i *ngIf=\"item.value.icon\" [ngClass]=item.value.icon></i>\n          <div> {{item.value.name}}</div>\n        </div>\n      </ng-template>\n    </p-multiSelect>\n  </div>\n</div>\n",
                    styles: ["label{color:#656565;font-size:1.4rem}:host ::ng-deep .p-multiselect{min-width:15rem}:host ::ng-deep .multiselect-custom-virtual-scroll .p-multiselect{min-width:20rem}:host ::ng-deep .multiselect-custom .p-multiselect-label{padding-top:.25rem;padding-bottom:.25rem}:host ::ng-deep .multiselect-custom .item-value{padding:.25rem .5rem;border-radius:3px;display:inline-flex;margin-right:.5rem;background-color:var(--primary-color);color:var(--primary-color-text)}:host ::ng-deep .multiselect-custom .item-value i{padding-right:8px;padding-top:2px}"]
                }] }
    ];
    InputMultiSelectComponent.propDecorators = {
        formGroup: [{ type: Input }],
        controlName: [{ type: Input }],
        label: [{ type: Input }],
        option: [{ type: Input }],
        filter: [{ type: Input }],
        maxSelectedItemsLabel: [{ type: Input }],
        defaultLabel: [{ type: Input }]
    };
    return InputMultiSelectComponent;
}());
export { InputMultiSelectComponent };
if (false) {
    /** @type {?} */
    InputMultiSelectComponent.prototype.formGroup;
    /** @type {?} */
    InputMultiSelectComponent.prototype.controlName;
    /** @type {?} */
    InputMultiSelectComponent.prototype.label;
    /** @type {?} */
    InputMultiSelectComponent.prototype.option;
    /** @type {?} */
    InputMultiSelectComponent.prototype.filter;
    /** @type {?} */
    InputMultiSelectComponent.prototype.maxSelectedItemsLabel;
    /** @type {?} */
    InputMultiSelectComponent.prototype.defaultLabel;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtbXVsdGktc2VsZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZWYtdWkvIiwic291cmNlcyI6WyJsaWIvZm9ybXMvaW5wdXQtbXVsdGktc2VsZWN0L2lucHV0LW11bHRpLXNlbGVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRTNDLHVDQVFDOzs7SUFQQyxrQ0FBYzs7SUFDZCxrQ0FLRTs7QUFHSjtJQUFBO1FBWVcsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLDBCQUFxQixHQUFHLDJCQUEyQixDQUFDO1FBQ3BELGlCQUFZLEdBQUcsU0FBUyxDQUFDO0lBQ3BDLENBQUM7O2dCQWZBLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsdXZCQUFrRDs7aUJBRW5EOzs7NEJBR0UsS0FBSzs4QkFDTCxLQUFLO3dCQUNMLEtBQUs7eUJBQ0wsS0FBSzt5QkFDTCxLQUFLO3dDQUNMLEtBQUs7K0JBQ0wsS0FBSzs7SUFDUixnQ0FBQztDQUFBLEFBZkQsSUFlQztTQVJZLHlCQUF5Qjs7O0lBQ3BDLDhDQUE4Qjs7SUFDOUIsZ0RBQTZCOztJQUM3QiwwQ0FBdUI7O0lBQ3ZCLDJDQUFxQzs7SUFDckMsMkNBQXdCOztJQUN4QiwwREFBNkQ7O0lBQzdELGlEQUFrQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIEFuZ3VsYXJcbmltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuZXhwb3J0IGludGVyZmFjZSBNdWx0aVNlbGVjdE9wdGlvbiB7XG4gIGxhYmVsOiBzdHJpbmc7XG4gIHZhbHVlOiB7XG4gICAgaWQ6IG51bWJlcixcbiAgICBuYW1lOiBzdHJpbmcsXG4gICAgY29kZTogc3RyaW5nLFxuICAgIGljb24/OiBzdHJpbmdcbiAgfTtcbn1cblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnaW5wdXQtbXVsdGktc2VsZWN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LW11bHRpLXNlbGVjdC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2lucHV0LW11bHRpLXNlbGVjdC5jb21wb25lbnQuc2NzcyddLFxufSlcblxuZXhwb3J0IGNsYXNzIElucHV0TXVsdGlTZWxlY3RDb21wb25lbnQge1xuICBASW5wdXQoKSBmb3JtR3JvdXA6IEZvcm1Hcm91cDtcbiAgQElucHV0KCkgY29udHJvbE5hbWU6IHN0cmluZztcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9uOiBNdWx0aVNlbGVjdE9wdGlvbltdO1xuICBASW5wdXQoKSBmaWx0ZXIgPSBmYWxzZTtcbiAgQElucHV0KCkgbWF4U2VsZWN0ZWRJdGVtc0xhYmVsID0gJ3swfSDDqWzDqW1lbnRzIHPDqWxlY3Rpb25uw6lzJztcbiAgQElucHV0KCkgZGVmYXVsdExhYmVsID0gJ0Nob2lzaXInO1xufVxuIl19