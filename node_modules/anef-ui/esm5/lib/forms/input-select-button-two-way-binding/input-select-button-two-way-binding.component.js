/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-select-button-two-way-binding/input-select-button-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { generateGuid } from '../../shared/guid';
var InputSelectButtonTwoWayBindingComponent = /** @class */ (function () {
    function InputSelectButtonTwoWayBindingComponent() {
        this.error = null;
        this.multiple = false;
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
    }
    Object.defineProperty(InputSelectButtonTwoWayBindingComponent.prototype, "errors", {
        set: /**
         * @param {?} errors
         * @return {?}
         */
        function (errors) {
            if (!errors) {
                this.error = null;
            }
            else if (typeof (errors) === 'string') {
                this.error = [errors];
            }
            else {
                this.error = errors;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    InputSelectButtonTwoWayBindingComponent.prototype.toString = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.options) {
            return '-';
        }
        /** @type {?} */
        var selectedOption = this.options.find((/**
         * @param {?} option
         * @return {?}
         */
        function (option) { return _this.model === option.value; }));
        return selectedOption ? selectedOption.label : '-';
    };
    InputSelectButtonTwoWayBindingComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-select-button-two-way-binding',
                    template: "<label *ngIf=\"label\" for=\"{{guid}}\">\n  {{label}} <span *ngIf=\"required && !readonly\" class=\"redish\">*</span> :\n</label>\n\n<div class=\"input\">\n  <div *ngIf=\"!readonly; else textual\" class=\"p-grid\">\n    <p-selectButton\n      (ngModelChange)=\"ngModelChange.emit($event)\"\n      [(ngModel)]=\"model\"\n      [multiple]=\"multiple\"\n      [ngClass]=\"{'error': error && error.length}\"\n      [options]=\"options\"\n      class=\"custom-input-select-button p-col-12\"\n      id=\"{{guid}}\"\n      name=\"{{guid}}\">\n    </p-selectButton>\n  </div>\n\n  <ng-template #textual>\n    <div>{{ toString() }}</div>\n  </ng-template>\n</div>\n\n<div *ngIf=\"error && error.length\" class=\"error redish\">\n  <div *ngFor=\"let errorLine of error\">\n    <p>\n      <i class=\"pi pi-info-circle\"></i>\n      <span>{{errorLine}}</span>\n    </p>\n  </div>\n</div>\n",
                    styles: ["label{color:#656565;font-size:1.4rem}.custom-input-select-button{margin-top:-.8rem}"]
                }] }
    ];
    InputSelectButtonTwoWayBindingComponent.propDecorators = {
        model: [{ type: Input }],
        readonly: [{ type: Input }],
        required: [{ type: Input }],
        label: [{ type: Input }],
        multiple: [{ type: Input }],
        options: [{ type: Input }],
        errors: [{ type: Input }],
        ngModelChange: [{ type: Output }]
    };
    return InputSelectButtonTwoWayBindingComponent;
}());
export { InputSelectButtonTwoWayBindingComponent };
if (false) {
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.error;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.readonly;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.multiple;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.options;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputSelectButtonTwoWayBindingComponent.prototype.guid;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LWJ1dHRvbi10d28td2F5LWJpbmRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9mb3Jtcy9pbnB1dC1zZWxlY3QtYnV0dG9uLXR3by13YXktYmluZGluZy9pbnB1dC1zZWxlY3QtYnV0dG9uLXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXZFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUdqRDtJQUFBO1FBUUUsVUFBSyxHQUFHLElBQUksQ0FBQztRQU1KLGFBQVEsR0FBRyxLQUFLLENBQUM7UUFXaEIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTdDLFNBQUksR0FBRyxZQUFZLEVBQUUsQ0FBQztJQVN4QixDQUFDO0lBcEJDLHNCQUFhLDJEQUFNOzs7OztRQUFuQixVQUFvQixNQUE4QjtZQUNoRCxJQUFJLENBQUMsTUFBTSxFQUFFO2dCQUNYLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO2FBQ25CO2lCQUFNLElBQUksT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLFFBQVEsRUFBRTtnQkFDdkMsSUFBSSxDQUFDLEtBQUssR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2FBQ3ZCO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxLQUFLLEdBQUcsTUFBTSxDQUFDO2FBQ3JCO1FBQ0gsQ0FBQzs7O09BQUE7Ozs7SUFLRCwwREFBUTs7O0lBQVI7UUFBQSxpQkFNQztRQUxDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLE9BQU8sR0FBRyxDQUFDO1NBQ1o7O1lBQ0ssY0FBYyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSTs7OztRQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsS0FBSSxDQUFDLEtBQUssS0FBSyxNQUFNLENBQUMsS0FBSyxFQUEzQixDQUEyQixFQUFDO1FBQy9FLE9BQU8sY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDckQsQ0FBQzs7Z0JBbkNGLFNBQVMsU0FBQzs7b0JBRVQsUUFBUSxFQUFFLDBDQUEwQztvQkFDcEQseTNCQUFtRTs7aUJBRXBFOzs7d0JBS0UsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLEtBQUs7d0JBQ0wsS0FBSzsyQkFDTCxLQUFLOzBCQUNMLEtBQUs7eUJBQ0wsS0FBSztnQ0FTTCxNQUFNOztJQVdULDhDQUFDO0NBQUEsQUFwQ0QsSUFvQ0M7U0E5QlksdUNBQXVDOzs7SUFFbEQsd0RBQWE7O0lBRWIsd0RBQXdCOztJQUN4QiwyREFBMkI7O0lBQzNCLDJEQUEwQjs7SUFDMUIsd0RBQXVCOztJQUN2QiwyREFBMEI7O0lBQzFCLDBEQUErQjs7SUFVL0IsZ0VBQTZDOztJQUU3Qyx1REFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU2VsZWN0SXRlbSB9IGZyb20gJ3ByaW1lbmcvYXBpJztcbmltcG9ydCB7IGdlbmVyYXRlR3VpZCB9IGZyb20gJy4uLy4uL3NoYXJlZC9ndWlkJztcblxuXG5AQ29tcG9uZW50KHtcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6ICdhbmVmLWlucHV0LXNlbGVjdC1idXR0b24tdHdvLXdheS1iaW5kaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LXNlbGVjdC1idXR0b24tdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5wdXQtc2VsZWN0LWJ1dHRvbi10d28td2F5LWJpbmRpbmcuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBJbnB1dFNlbGVjdEJ1dHRvblR3b1dheUJpbmRpbmdDb21wb25lbnQge1xuXG4gIGVycm9yID0gbnVsbDtcblxuICBASW5wdXQoKSBtb2RlbDogYm9vbGVhbjtcbiAgQElucHV0KCkgcmVhZG9ubHk6IGJvb2xlYW47XG4gIEBJbnB1dCgpIHJlcXVpcmVkOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGxhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpIG11bHRpcGxlID0gZmFsc2U7XG4gIEBJbnB1dCgpIG9wdGlvbnM6IFNlbGVjdEl0ZW1bXTtcbiAgQElucHV0KCkgc2V0IGVycm9ycyhlcnJvcnM6IHN0cmluZyB8IEFycmF5PHN0cmluZz4pIHtcbiAgICBpZiAoIWVycm9ycykge1xuICAgICAgdGhpcy5lcnJvciA9IG51bGw7XG4gICAgfSBlbHNlIGlmICh0eXBlb2YgKGVycm9ycykgPT09ICdzdHJpbmcnKSB7XG4gICAgICB0aGlzLmVycm9yID0gW2Vycm9yc107XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcnM7XG4gICAgfVxuICB9XG4gIEBPdXRwdXQoKSBuZ01vZGVsQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGd1aWQgPSBnZW5lcmF0ZUd1aWQoKTtcblxuICB0b1N0cmluZygpOiBzdHJpbmcge1xuICAgIGlmICghdGhpcy5vcHRpb25zKSB7XG4gICAgICByZXR1cm4gJy0nO1xuICAgIH1cbiAgICBjb25zdCBzZWxlY3RlZE9wdGlvbiA9IHRoaXMub3B0aW9ucy5maW5kKG9wdGlvbiA9PiB0aGlzLm1vZGVsID09PSBvcHRpb24udmFsdWUpO1xuICAgIHJldHVybiBzZWxlY3RlZE9wdGlvbiA/IHNlbGVjdGVkT3B0aW9uLmxhYmVsIDogJy0nO1xuICB9XG59XG4iXX0=