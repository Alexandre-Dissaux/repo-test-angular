/**
 * @fileoverview added by tsickle
 * Generated from: lib/forms/input-select-two-way-binding/input-select-two-way-binding.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter } from '@angular/core';
import { isEqual } from 'lodash';
import { generateGuid } from '../../shared/guid';
var InputSelectTwoWayBindingComponent = /** @class */ (function () {
    function InputSelectTwoWayBindingComponent() {
        this.error = null;
        this.required = false;
        this.showDeleteItemsButton = false;
        this.readonly = false;
        this.disabled = false;
        this.options = [];
        this.filter = false;
        this.ngModelChange = new EventEmitter();
        this.guid = generateGuid();
        this.colSize = '12';
    }
    Object.defineProperty(InputSelectTwoWayBindingComponent.prototype, "errors", {
        set: /**
         * @param {?} errors
         * @return {?}
         */
        function (errors) {
            if (!errors) {
                this.error = null;
            }
            else if (typeof (errors) === 'string') {
                this.error = [errors];
            }
            else {
                this.error = errors;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    InputSelectTwoWayBindingComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.colSize = this.showDeleteItemsButton ? '11' : '12';
    };
    /**
     * @return {?}
     */
    InputSelectTwoWayBindingComponent.prototype.onModelChange = /**
     * @return {?}
     */
    function () {
        this.ngModelChange.emit(this.model);
    };
    /**
     * @return {?}
     */
    InputSelectTwoWayBindingComponent.prototype.toString = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.options) {
            return '-';
        }
        /** @type {?} */
        var selectedOption = this.options.find((/**
         * @param {?} option
         * @return {?}
         */
        function (option) { return isEqual(_this.model, option.value); }));
        return selectedOption ? selectedOption.label : '-';
    };
    /**
     * @return {?}
     */
    InputSelectTwoWayBindingComponent.prototype.deleteItem = /**
     * @return {?}
     */
    function () {
        this.model = null;
        this.ngModelChange.emit(this.model);
    };
    InputSelectTwoWayBindingComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-input-select-two-way-binding',
                    template: "<div class=\"p-grid nogutter\">\n  <div class=\"p-col-12\">\n    <label *ngIf=\"label\" for=\"{{guid}}\">\n      {{label}} <span *ngIf=\"required && !readonly\" class=\"redish\">*</span> :\n    </label>\n\n    <div class=\"input\">\n      <div *ngIf=\"!readonly; else textual\">\n        <div class=\"p-grid p-align-center\">\n          <p-dropdown\n            id=\"{{guid}}\"\n            name=\"{{guid}}\"\n            [placeholder]=\"placeholder\"\n            [(ngModel)]=\"model\"\n            (ngModelChange)=\"onModelChange()\"\n            [options]=\"options\"\n            [required]=\"required\"\n            [disabled]=\"disabled\"\n            class=\"p-col-{{colSize}}\"\n            [ngClass]=\"{\n              'error': error && error.length,\n              'fluid': !showDeleteItemsButton\n            }\"\n            [filter]=\"filter\">\n          </p-dropdown>\n\n          <span\n            (click)=\"deleteItem()\"\n            *ngIf=\"showDeleteItemsButton\"\n            class=\"delete-button\">\n              <i class=\"fa fa-close fa-lg icon\"></i>\n          </span>\n        </div>\n      </div>\n\n      <ng-template #textual>\n        <div class=\"textual\">{{ toString() }}</div>\n      </ng-template>\n    </div>\n\n    <div *ngIf=\"error && error.length\" class=\"error redish\">\n      <div *ngFor=\"let errorLine of error\">\n        <p>\n          <i class=\"pi pi-info-circle\"></i>\n          <span>{{errorLine}}</span>\n        </p>\n      </div>\n    </div>\n\n  </div>\n</div>\n",
                    styles: ["label{color:#656565;font-size:1.4rem}.delete-button{margin-bottom:7px;margin-left:5px;cursor:pointer;color:#d13721;font-size:1.2rem}p-dropdown{margin-top:-.5rem}p-dropdown.fluid{width:100%}.textual{padding-top:7px}"]
                }] }
    ];
    InputSelectTwoWayBindingComponent.propDecorators = {
        model: [{ type: Input }],
        required: [{ type: Input }],
        showDeleteItemsButton: [{ type: Input }],
        readonly: [{ type: Input }],
        disabled: [{ type: Input }],
        label: [{ type: Input }],
        placeholder: [{ type: Input }],
        options: [{ type: Input }],
        filter: [{ type: Input }],
        errors: [{ type: Input }],
        ngModelChange: [{ type: Output }]
    };
    return InputSelectTwoWayBindingComponent;
}());
export { InputSelectTwoWayBindingComponent };
if (false) {
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.error;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.model;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.required;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.showDeleteItemsButton;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.readonly;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.disabled;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.label;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.placeholder;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.options;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.filter;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.ngModelChange;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.guid;
    /** @type {?} */
    InputSelectTwoWayBindingComponent.prototype.colSize;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQtc2VsZWN0LXR3by13YXktYmluZGluZy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmVmLXVpLyIsInNvdXJjZXMiOlsibGliL2Zvcm1zL2lucHV0LXNlbGVjdC10d28td2F5LWJpbmRpbmcvaW5wdXQtc2VsZWN0LXR3by13YXktYmluZGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRy9FLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFakMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRWpEO0lBQUE7UUFPRSxVQUFLLEdBQUcsSUFBSSxDQUFDO1FBR0osYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQiwwQkFBcUIsR0FBRyxLQUFLLENBQUM7UUFDOUIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQUNqQixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBR2pCLFlBQU8sR0FBaUIsRUFBRSxDQUFDO1FBQzNCLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFVZCxrQkFBYSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFN0MsU0FBSSxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQ3RCLFlBQU8sR0FBRyxJQUFJLENBQUM7SUFzQmpCLENBQUM7SUFsQ0Msc0JBQWEscURBQU07Ozs7O1FBQW5CLFVBQW9CLE1BQThCO1lBQ2hELElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1gsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUM7YUFDbkI7aUJBQU0sSUFBSSxPQUFNLENBQUMsTUFBTSxDQUFDLEtBQUssUUFBUSxFQUFFO2dCQUN0QyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7YUFDdkI7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUM7YUFDckI7UUFDSCxDQUFDOzs7T0FBQTs7OztJQU1ELG9EQUFROzs7SUFBUjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUMxRCxDQUFDOzs7O0lBRUQseURBQWE7OztJQUFiO1FBQ0UsSUFBSSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3RDLENBQUM7Ozs7SUFFRCxvREFBUTs7O0lBQVI7UUFBQSxpQkFNQztRQUxDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO1lBQ2pCLE9BQU8sR0FBRyxDQUFDO1NBQ1o7O1lBQ0ssY0FBYyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSTs7OztRQUFDLFVBQUEsTUFBTSxJQUFJLE9BQUEsT0FBTyxDQUFDLEtBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFqQyxDQUFpQyxFQUFDO1FBQ3JGLE9BQU8sY0FBYyxDQUFDLENBQUMsQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDckQsQ0FBQzs7OztJQUVELHNEQUFVOzs7SUFBVjtRQUNFLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN0QyxDQUFDOztnQkFuREYsU0FBUyxTQUFDOztvQkFFVCxRQUFRLEVBQUUsbUNBQW1DO29CQUM3QywrL0NBQTREOztpQkFFN0Q7Ozt3QkFJRSxLQUFLOzJCQUNMLEtBQUs7d0NBQ0wsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLEtBQUs7d0JBQ0wsS0FBSzs4QkFDTCxLQUFLOzBCQUNMLEtBQUs7eUJBQ0wsS0FBSzt5QkFDTCxLQUFLO2dDQVNMLE1BQU07O0lBeUJULHdDQUFDO0NBQUEsQUFwREQsSUFvREM7U0E5Q1ksaUNBQWlDOzs7SUFDNUMsa0RBQWE7O0lBRWIsa0RBQW9COztJQUNwQixxREFBMEI7O0lBQzFCLGtFQUF1Qzs7SUFDdkMscURBQTBCOztJQUMxQixxREFBMEI7O0lBQzFCLGtEQUF1Qjs7SUFDdkIsd0RBQTZCOztJQUM3QixvREFBb0M7O0lBQ3BDLG1EQUF3Qjs7SUFVeEIsMERBQTZDOztJQUU3QyxpREFBc0I7O0lBQ3RCLG9EQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTZWxlY3RJdGVtIH0gZnJvbSAncHJpbWVuZy9hcGknO1xuaW1wb3J0IHsgaXNFcXVhbCB9IGZyb20gJ2xvZGFzaCc7XG5cbmltcG9ydCB7IGdlbmVyYXRlR3VpZCB9IGZyb20gJy4uLy4uL3NoYXJlZC9ndWlkJztcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogY29tcG9uZW50LXNlbGVjdG9yXG4gIHNlbGVjdG9yOiAnYW5lZi1pbnB1dC1zZWxlY3QtdHdvLXdheS1iaW5kaW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LXNlbGVjdC10d28td2F5LWJpbmRpbmcuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9pbnB1dC1zZWxlY3QtdHdvLXdheS1iaW5kaW5nLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIElucHV0U2VsZWN0VHdvV2F5QmluZGluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGVycm9yID0gbnVsbDtcblxuICBASW5wdXQoKSBtb2RlbDogYW55O1xuICBASW5wdXQoKSByZXF1aXJlZCA9IGZhbHNlO1xuICBASW5wdXQoKSBzaG93RGVsZXRlSXRlbXNCdXR0b24gPSBmYWxzZTtcbiAgQElucHV0KCkgcmVhZG9ubHkgPSBmYWxzZTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgbGFiZWw6IHN0cmluZztcbiAgQElucHV0KCkgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgQElucHV0KCkgb3B0aW9uczogU2VsZWN0SXRlbVtdID0gW107XG4gIEBJbnB1dCgpIGZpbHRlciA9IGZhbHNlO1xuICBASW5wdXQoKSBzZXQgZXJyb3JzKGVycm9yczogc3RyaW5nIHwgQXJyYXk8c3RyaW5nPikge1xuICAgIGlmICghZXJyb3JzKSB7XG4gICAgICB0aGlzLmVycm9yID0gbnVsbDtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZihlcnJvcnMpID09PSAnc3RyaW5nJykge1xuICAgICAgdGhpcy5lcnJvciA9IFtlcnJvcnNdO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmVycm9yID0gZXJyb3JzO1xuICAgIH1cbiAgfVxuICBAT3V0cHV0KCkgbmdNb2RlbENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBndWlkID0gZ2VuZXJhdGVHdWlkKCk7XG4gIGNvbFNpemUgPSAnMTInO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuY29sU2l6ZSA9IHRoaXMuc2hvd0RlbGV0ZUl0ZW1zQnV0dG9uID8gJzExJyA6ICcxMic7XG4gIH1cblxuICBvbk1vZGVsQ2hhbmdlKCk6IHZvaWQge1xuICAgIHRoaXMubmdNb2RlbENoYW5nZS5lbWl0KHRoaXMubW9kZWwpO1xuICB9XG5cbiAgdG9TdHJpbmcoKTogc3RyaW5nIHtcbiAgICBpZiAoIXRoaXMub3B0aW9ucykge1xuICAgICAgcmV0dXJuICctJztcbiAgICB9XG4gICAgY29uc3Qgc2VsZWN0ZWRPcHRpb24gPSB0aGlzLm9wdGlvbnMuZmluZChvcHRpb24gPT4gaXNFcXVhbCh0aGlzLm1vZGVsLCBvcHRpb24udmFsdWUpKTtcbiAgICByZXR1cm4gc2VsZWN0ZWRPcHRpb24gPyBzZWxlY3RlZE9wdGlvbi5sYWJlbCA6ICctJztcbiAgfVxuXG4gIGRlbGV0ZUl0ZW0oKTogdm9pZCB7XG4gICAgdGhpcy5tb2RlbCA9IG51bGw7XG4gICAgdGhpcy5uZ01vZGVsQ2hhbmdlLmVtaXQodGhpcy5tb2RlbCk7XG4gIH1cbn1cbiJdfQ==