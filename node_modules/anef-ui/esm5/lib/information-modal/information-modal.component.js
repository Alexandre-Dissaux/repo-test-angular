/**
 * @fileoverview added by tsickle
 * Generated from: lib/information-modal/information-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var InformationModalComponent = /** @class */ (function () {
    function InformationModalComponent() {
        this.hideIconBloc = false;
        this.displayInfoChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    InformationModalComponent.prototype.onClose = /**
     * @return {?}
     */
    function () {
        this.displayInfoChange.emit(false);
    };
    /**
     * @return {?}
     */
    InformationModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.displayInfoChange.unsubscribe();
    };
    InformationModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-information-modal',
                    template: "<p-dialog\n  appendTo=\"body\"\n  [(visible)]=\"displayInfo\"\n  [modal]=\"true\"\n  [closable]=\"false\"\n  [responsive]=\"true\"\n  (onAfterHide)=\"onClose()\"\n  [style]=\"{width: '60rem', minWidth: '28rem'}\" [minY]=\"70\"\n  [baseZIndex]=\"10000\">\n  <p-header>\n    {{ title }}\n\n  </p-header>\n  <div class=\"msgBox info\" *ngIf=\"!hideIconBloc\">\n    <span class=\"fa fa-info-circle\"></span>\n    <p class=\"bold\">{{titleCheck}}</p>\n  </div>\n  <p class=\"bold\" *ngIf=\"textBold\">{{textBold | trim}}.</p>\n  <p>{{text | trim}}.</p>\n  <p *ngIf=\"facultativeText\">{{facultativeText}}</p>\n  <p-footer>\n    <button type=\"button\" pButton (click)=\"onClose()\"  label=\"{{labelBtn}}\"></button>\n  </p-footer>\n</p-dialog>\n",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    InformationModalComponent.ctorParameters = function () { return []; };
    InformationModalComponent.propDecorators = {
        displayInfo: [{ type: Input }],
        title: [{ type: Input }],
        titleCheck: [{ type: Input }],
        text: [{ type: Input }],
        facultativeText: [{ type: Input }],
        labelBtn: [{ type: Input }],
        textBold: [{ type: Input }],
        hideIconBloc: [{ type: Input }],
        displayInfoChange: [{ type: Output }]
    };
    return InformationModalComponent;
}());
export { InformationModalComponent };
if (false) {
    /** @type {?} */
    InformationModalComponent.prototype.displayInfo;
    /** @type {?} */
    InformationModalComponent.prototype.title;
    /** @type {?} */
    InformationModalComponent.prototype.titleCheck;
    /** @type {?} */
    InformationModalComponent.prototype.text;
    /** @type {?} */
    InformationModalComponent.prototype.facultativeText;
    /** @type {?} */
    InformationModalComponent.prototype.labelBtn;
    /** @type {?} */
    InformationModalComponent.prototype.textBold;
    /** @type {?} */
    InformationModalComponent.prototype.hideIconBloc;
    /** @type {?} */
    InformationModalComponent.prototype.displayInfoChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mb3JtYXRpb24tbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5lZi11aS8iLCJzb3VyY2VzIjpbImxpYi9pbmZvcm1hdGlvbi1tb2RhbC9pbmZvcm1hdGlvbi1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRWhGO0lBZ0JFO1FBSFMsaUJBQVksR0FBRyxLQUFLLENBQUM7UUFDcEIsc0JBQWlCLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUVsQyxDQUFDOzs7O0lBRWhCLDJDQUFPOzs7SUFBUDtRQUNFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckMsQ0FBQzs7OztJQUVELCtDQUFXOzs7SUFBWDtRQUNFLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN2QyxDQUFDOztnQkF4QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLGd2QkFBaUQ7O2lCQUVsRDs7Ozs7OEJBRUUsS0FBSzt3QkFDTCxLQUFLOzZCQUNMLEtBQUs7dUJBQ0wsS0FBSztrQ0FDTCxLQUFLOzJCQUNMLEtBQUs7MkJBQ0wsS0FBSzsrQkFDTCxLQUFLO29DQUNMLE1BQU07O0lBV1QsZ0NBQUM7Q0FBQSxBQXpCRCxJQXlCQztTQXBCWSx5QkFBeUI7OztJQUNwQyxnREFBOEI7O0lBQzlCLDBDQUF1Qjs7SUFDdkIsK0NBQTRCOztJQUM1Qix5Q0FBc0I7O0lBQ3RCLG9EQUFpQzs7SUFDakMsNkNBQTBCOztJQUMxQiw2Q0FBMEI7O0lBQzFCLGlEQUE4Qjs7SUFDOUIsc0RBQWlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uRGVzdHJveSwgT3V0cHV0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLWluZm9ybWF0aW9uLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2luZm9ybWF0aW9uLW1vZGFsLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vaW5mb3JtYXRpb24tbW9kYWwuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIEluZm9ybWF0aW9uTW9kYWxDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBASW5wdXQoKSBkaXNwbGF5SW5mbzogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgdGl0bGVDaGVjazogc3RyaW5nO1xuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZhY3VsdGF0aXZlVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSBsYWJlbEJ0bjogc3RyaW5nO1xuICBASW5wdXQoKSB0ZXh0Qm9sZDogc3RyaW5nO1xuICBASW5wdXQoKSBoaWRlSWNvbkJsb2MgPSBmYWxzZTtcbiAgQE91dHB1dCgpIGRpc3BsYXlJbmZvQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cblxuICBvbkNsb3NlKCkge1xuICAgIHRoaXMuZGlzcGxheUluZm9DaGFuZ2UuZW1pdChmYWxzZSk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmRpc3BsYXlJbmZvQ2hhbmdlLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==