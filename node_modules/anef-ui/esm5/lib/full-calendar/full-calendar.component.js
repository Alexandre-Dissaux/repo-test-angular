/**
 * @fileoverview added by tsickle
 * Generated from: lib/full-calendar/full-calendar.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import dayGridPlugin from '@fullcalendar/daygrid';
import timeGridPlugin from '@fullcalendar/timegrid';
import interactionPlugin from '@fullcalendar/interaction';
import listPlugin from '@fullcalendar/list';
import moment from 'moment';
import allLocales from '@fullcalendar/core/locales-all';
var FullCalendarComponent = /** @class */ (function () {
    function FullCalendarComponent() {
        this.eventClick = new EventEmitter();
        this.dateClick = new EventEmitter();
        this.eventDrop = new EventEmitter();
        this.eventResize = new EventEmitter();
        this.dateRender = new EventEmitter();
        this.slotDuration = '00:15:00';
        this.minTime = '06:00:00';
        this.maxTime = '20:00:00';
        this.scrollTime = '08:00:00';
        this.editable = true;
        this.snapMinutes = 15;
        this.businessHours = true;
        this.firstHour = true;
        this.timeFormat = 'H:mm';
    }
    /**
     * @return {?}
     */
    FullCalendarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.options = {
            plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin, listPlugin],
            defaultView: this.viewCalendar(),
            defaultDate: moment().format('YYYY-MM-DD'),
            locales: allLocales,
            locale: 'fr',
            slotDuration: this.slotDuration,
            allDaySlot: false,
            minTime: this.minTime,
            maxTime: this.maxTime,
            scrollTime: this.maxTime,
            snapMinutes: this.snapMinutes,
            businessHours: this.businessHours,
            firstHour: this.firstHour,
            timeFormat: this.timeFormat,
            header: {
                right: 'today, prev,next',
                center: 'title',
                left: 'dayGridMonth,timeGridWeek,timeGridDay',
            },
            editable: this.editable,
            dateClick: this.datatClickA.bind(this),
            eventClick: this.eventClickB.bind(this),
            eventResize: this.eventResizeA.bind(this),
            eventDrop: this.eventDropA.bind(this),
            datesRender: this.dateRenderA.bind(this),
        };
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FullCalendarComponent.prototype.eventDropA = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.eventDrop.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FullCalendarComponent.prototype.eventResizeA = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.eventResize.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FullCalendarComponent.prototype.datatClickA = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.dateClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FullCalendarComponent.prototype.eventClickB = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.eventClick.emit(event);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FullCalendarComponent.prototype.dateRenderA = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.dateRender.emit(event);
    };
    /**
     * @return {?}
     */
    FullCalendarComponent.prototype.viewCalendar = /**
     * @return {?}
     */
    function () {
        if (this.dayCalander) {
            return 'timeGridDay';
        }
        if (this.weekCalander) {
            return 'timeGridWeek';
        }
        return 'dayGridMonth';
    };
    Object.defineProperty(FullCalendarComponent.prototype, "calendarApi", {
        get: /**
         * @return {?}
         */
        function () {
            this._calendarApi = this.calendar.getApi();
            return this._calendarApi;
        },
        enumerable: true,
        configurable: true
    });
    FullCalendarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-full-calendar',
                    template: "<p-fullCalendar [events]=\"events\" #calendar\n[options]=\"options\"\n(eventClick)=\" eventClickB($event)\"\n(dateClick)=\"datatClickA($event)\"\n(eventResize)=\"eventResizeA($event)\"\n>\n</p-fullCalendar>\n",
                    styles: ["::ng-deep .fc .fc-toolbar .fc-button-group .fc-button{background-color:#f5f5f5;color:#007ad9}::ng-deep .fc .fc-toolbar .fc-button:focus-within{background-color:#007ad9!important;color:#f5f5f5!important}"]
                }] }
    ];
    /** @nocollapse */
    FullCalendarComponent.ctorParameters = function () { return []; };
    FullCalendarComponent.propDecorators = {
        events: [{ type: Input }],
        eventClick: [{ type: Output }],
        dateClick: [{ type: Output }],
        eventDrop: [{ type: Output }],
        eventResize: [{ type: Output }],
        dateRender: [{ type: Output }],
        dayCalander: [{ type: Input }],
        weekCalander: [{ type: Input }],
        slotDuration: [{ type: Input }],
        minTime: [{ type: Input }],
        maxTime: [{ type: Input }],
        scrollTime: [{ type: Input }],
        editable: [{ type: Input }],
        snapMinutes: [{ type: Input }],
        businessHours: [{ type: Input }],
        firstHour: [{ type: Input }],
        timeFormat: [{ type: Input }],
        calendar: [{ type: ViewChild, args: ['calendar',] }]
    };
    return FullCalendarComponent;
}());
export { FullCalendarComponent };
if (false) {
    /** @type {?} */
    FullCalendarComponent.prototype.events;
    /** @type {?} */
    FullCalendarComponent.prototype.eventClick;
    /** @type {?} */
    FullCalendarComponent.prototype.dateClick;
    /** @type {?} */
    FullCalendarComponent.prototype.eventDrop;
    /** @type {?} */
    FullCalendarComponent.prototype.eventResize;
    /** @type {?} */
    FullCalendarComponent.prototype.dateRender;
    /** @type {?} */
    FullCalendarComponent.prototype.dayCalander;
    /** @type {?} */
    FullCalendarComponent.prototype.weekCalander;
    /** @type {?} */
    FullCalendarComponent.prototype.slotDuration;
    /** @type {?} */
    FullCalendarComponent.prototype.minTime;
    /** @type {?} */
    FullCalendarComponent.prototype.maxTime;
    /** @type {?} */
    FullCalendarComponent.prototype.scrollTime;
    /** @type {?} */
    FullCalendarComponent.prototype.editable;
    /** @type {?} */
    FullCalendarComponent.prototype.snapMinutes;
    /** @type {?} */
    FullCalendarComponent.prototype.businessHours;
    /** @type {?} */
    FullCalendarComponent.prototype.firstHour;
    /** @type {?} */
    FullCalendarComponent.prototype.timeFormat;
    /** @type {?} */
    FullCalendarComponent.prototype.options;
    /**
     * @type {?}
     * @private
     */
    FullCalendarComponent.prototype._calendarApi;
    /** @type {?} */
    FullCalendarComponent.prototype.calendar;
}
//# sourceMappingURL=data:application/json;base64,