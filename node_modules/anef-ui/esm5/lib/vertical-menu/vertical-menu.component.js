/**
 * @fileoverview added by tsickle
 * Generated from: lib/vertical-menu/vertical-menu.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, HostListener } from '@angular/core';
/**
 * @record
 */
export function VMenuItem() { }
if (false) {
    /** @type {?|undefined} */
    VMenuItem.prototype.items;
    /** @type {?|undefined} */
    VMenuItem.prototype.control;
}
var VerticalMenuComponent = /** @class */ (function () {
    function VerticalMenuComponent() {
        this.topOffset = 0;
        this.isWithMarkers = false;
        this.isSingleLevel = true;
        this.targets = [];
    }
    /**
     * @return {?}
     */
    VerticalMenuComponent.prototype.handleScroll = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (!this.targets.length) {
            return;
        }
        /** @type {?} */
        var pos = (document.documentElement.scrollTop || document.body.scrollTop);
        /** @type {?} */
        var toActivate = this.targets[0];
        try {
            for (var _b = tslib_1.__values(this.targets), _c = _b.next(); !_c.done; _c = _b.next()) {
                var elem = _c.value;
                /** @type {?} */
                var threshold = this._getYOffset(elem.target) - 1;
                if (threshold <= pos) {
                    toActivate = elem;
                }
                elem.expanded = false;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        if (toActivate) {
            toActivate.expanded = true;
        }
    };
    /**
     * @return {?}
     */
    VerticalMenuComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.formattedItems = this._parseItems(this.items);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    VerticalMenuComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.items && changes.items.previousValue != changes.items.currentValue) {
            this.formattedItems = this._parseItems(changes.items.currentValue);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    VerticalMenuComponent.prototype.onAnchorLink = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        // Scroll to the target adding the offset if defined
        /** @type {?} */
        var y = this._getYOffset(event.item.target);
        window.scrollTo({ top: y, behavior: 'smooth' });
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    VerticalMenuComponent.prototype._getYOffset = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        /** @type {?} */
        var targetElem = document.querySelector(target);
        if (!targetElem) {
            // In case the target element is unreachable we return a value superior to the max-scroll so it can't be auto-selected
            return document.documentElement.scrollHeight + 1;
        }
        /** @type {?} */
        var y = targetElem.getBoundingClientRect().top + window.pageYOffset - this.topOffset;
        return y;
    };
    /**
     * @private
     * @param {?} items
     * @return {?}
     */
    VerticalMenuComponent.prototype._parseItems = /**
     * @private
     * @param {?} items
     * @return {?}
     */
    function (items) {
        var _this = this;
        var e_2, _a;
        if (!items) {
            return;
        }
        /** @type {?} */
        var formatted = [];
        var _loop_1 = function (item) {
            /** @type {?} */
            var tmpItem = tslib_1.__assign({}, item);
            // Set onclick event if not defined and an id is passed as target
            if (item.target && item.target.indexOf('#') !== -1 && !item.command) {
                tmpItem.command = this_1.onAnchorLink.bind(this_1);
                this_1.targets.push(tmpItem);
            }
            // Status marker specific controls
            if (this_1.isWithMarkers) {
                if (!tmpItem.icon) {
                    tmpItem.icon = 'fa fa-check-circle';
                }
                if (item.control) {
                    delete tmpItem.control;
                    if (!tmpItem.styleClass) {
                        tmpItem.styleClass = '';
                    }
                    this_1.setMarkerStatus(tmpItem, item.control);
                    item.control.statusChanges.subscribe((/**
                     * @param {?} status
                     * @return {?}
                     */
                    function (status) {
                        _this.setMarkerStatus(tmpItem, item.control);
                    }));
                }
            }
            // Recurse
            if (item.items && item.items.length) {
                this_1.isSingleLevel = false;
                tmpItem.items = this_1._parseItems((/** @type {?} */ (item.items)));
            }
            formatted.push(tmpItem);
        };
        var this_1 = this;
        try {
            for (var items_1 = tslib_1.__values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {
                var item = items_1_1.value;
                _loop_1(item);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return formatted;
    };
    /**
     * @param {?} item
     * @param {?} control
     * @return {?}
     */
    VerticalMenuComponent.prototype.setMarkerStatus = /**
     * @param {?} item
     * @param {?} control
     * @return {?}
     */
    function (item, control) {
        /** @type {?} */
        var isCompleteValidClass = 'is-complete-valid';
        /** @type {?} */
        var isCompleteInvalidClass = 'is-complete-invalid';
        /** @type {?} */
        var completeWithRejectionErrorKey = 'completeInvalid';
        if (control.valid) {
            this.addClass(item, isCompleteValidClass);
            this.removeClass(item, isCompleteInvalidClass);
        }
        else {
            if (control.errors && completeWithRejectionErrorKey in control.errors) {
                this.addClass(item, isCompleteInvalidClass);
            }
            else {
                this.removeClass(item, isCompleteInvalidClass);
            }
            this.removeClass(item, isCompleteValidClass);
        }
    };
    /**
     * @private
     * @param {?} item
     * @param {?} className
     * @return {?}
     */
    VerticalMenuComponent.prototype.addClass = /**
     * @private
     * @param {?} item
     * @param {?} className
     * @return {?}
     */
    function (item, className) {
        if (!item.styleClass) {
            item.styleClass = className;
        }
        if (-1 === item.styleClass.indexOf(className)) {
            item.styleClass += " " + className;
        }
    };
    /**
     * @private
     * @param {?} item
     * @param {?} className
     * @return {?}
     */
    VerticalMenuComponent.prototype.removeClass = /**
     * @private
     * @param {?} item
     * @param {?} className
     * @return {?}
     */
    function (item, className) {
        item.styleClass = item.styleClass.replace(className, '').trim();
    };
    VerticalMenuComponent.decorators = [
        { type: Component, args: [{
                    // tslint:disable-next-line: component-selector
                    selector: 'anef-vertical-menu',
                    template: "<p-panelMenu\n  [model]=\"formattedItems\"\n  [multiple]=\"multiple\"\n  [style]=\"style\"\n  [styleClass]=\"styleClass\"\n  class=\"anef-ui-vmenu\"\n  [class.no-submenu]=\"isSingleLevel\"\n  [class.with-markers]=\"isWithMarkers\"\n  routerLinkActiveOptions=\"{exact: true}\"\n  ></p-panelMenu>\n",
                    styles: [""]
                }] }
    ];
    VerticalMenuComponent.propDecorators = {
        items: [{ type: Input }],
        style: [{ type: Input }],
        styleClass: [{ type: Input }],
        multiple: [{ type: Input }],
        topOffset: [{ type: Input }],
        isWithMarkers: [{ type: Input }],
        handleScroll: [{ type: HostListener, args: ['window:scroll',] }]
    };
    return VerticalMenuComponent;
}());
export { VerticalMenuComponent };
if (false) {
    /** @type {?} */
    VerticalMenuComponent.prototype.items;
    /** @type {?} */
    VerticalMenuComponent.prototype.style;
    /** @type {?} */
    VerticalMenuComponent.prototype.styleClass;
    /** @type {?} */
    VerticalMenuComponent.prototype.multiple;
    /** @type {?} */
    VerticalMenuComponent.prototype.topOffset;
    /** @type {?} */
    VerticalMenuComponent.prototype.isWithMarkers;
    /** @type {?} */
    VerticalMenuComponent.prototype.isSingleLevel;
    /** @type {?} */
    VerticalMenuComponent.prototype.formattedItems;
    /** @type {?} */
    VerticalMenuComponent.prototype.targets;
}
//# sourceMappingURL=data:application/json;base64,