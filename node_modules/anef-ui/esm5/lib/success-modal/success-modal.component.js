/**
 * @fileoverview added by tsickle
 * Generated from: lib/success-modal/success-modal.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var SuccessModalComponent = /** @class */ (function () {
    function SuccessModalComponent() {
        this.displaySuccessChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SuccessModalComponent.prototype.onClose = /**
     * @return {?}
     */
    function () {
        this.displaySuccessChange.emit(false);
    };
    /**
     * @return {?}
     */
    SuccessModalComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.displaySuccessChange.unsubscribe();
    };
    SuccessModalComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-success-modal',
                    template: "<p-dialog\n  [(visible)]=\"displaySuccess\"\n  [modal]=\"true\"\n  [closable]=\"false\"\n  [responsive]=\"true\"\n  (onAfterHide)=\"onClose()\"\n  [style]=\"{width: '60rem', minWidth: '28rem'}\" [minY]=\"70\"\n  [baseZIndex]=\"10000\">\n  <p-header>\n    {{ title }}\n  </p-header>\n  <div class=\"msgBox info\">\n    <span class=\"fa fa-check-square-o check-icon\"></span>\n    <p>{{titleCheck}}</p>\n  </div>\n  <p class=\"bold\">{{textBold | trim}}.</p>\n  <p>{{text | trim}}.</p>\n  <p *ngIf=\"facultativeText\">{{facultativeText}}</p>\n  <p-footer>\n    <button type=\"button\" pButton (click)=\"onClose()\" label=\"{{labelBtn}}\"></button>\n  </p-footer>\n</p-dialog>\n",
                    styles: [".check-icon{color:#0c6b0d!important}"]
                }] }
    ];
    /** @nocollapse */
    SuccessModalComponent.ctorParameters = function () { return []; };
    SuccessModalComponent.propDecorators = {
        displaySuccess: [{ type: Input }],
        title: [{ type: Input }],
        titleCheck: [{ type: Input }],
        text: [{ type: Input }],
        facultativeText: [{ type: Input }],
        labelBtn: [{ type: Input }],
        textBold: [{ type: Input }],
        displaySuccessChange: [{ type: Output }]
    };
    return SuccessModalComponent;
}());
export { SuccessModalComponent };
if (false) {
    /** @type {?} */
    SuccessModalComponent.prototype.displaySuccess;
    /** @type {?} */
    SuccessModalComponent.prototype.title;
    /** @type {?} */
    SuccessModalComponent.prototype.titleCheck;
    /** @type {?} */
    SuccessModalComponent.prototype.text;
    /** @type {?} */
    SuccessModalComponent.prototype.facultativeText;
    /** @type {?} */
    SuccessModalComponent.prototype.labelBtn;
    /** @type {?} */
    SuccessModalComponent.prototype.textBold;
    /** @type {?} */
    SuccessModalComponent.prototype.displaySuccessChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VjY2Vzcy1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmVmLXVpLyIsInNvdXJjZXMiOlsibGliL3N1Y2Nlc3MtbW9kYWwvc3VjY2Vzcy1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQWEsTUFBTSxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUVyRztJQWdCRTtRQUhVLHlCQUFvQixHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFHcEMsQ0FBQzs7OztJQUVqQix1Q0FBTzs7O0lBQVA7UUFDRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7Ozs7SUFFRCwyQ0FBVzs7O0lBQVg7UUFDRSxJQUFJLENBQUMsb0JBQW9CLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUMsQ0FBQzs7Z0JBeEJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QiwrcUJBQTZDOztpQkFFOUM7Ozs7O2lDQUVFLEtBQUs7d0JBQ0wsS0FBSzs2QkFDTCxLQUFLO3VCQUNMLEtBQUs7a0NBQ0wsS0FBSzsyQkFDTCxLQUFLOzJCQUNMLEtBQUs7dUNBQ0wsTUFBTTs7SUFZVCw0QkFBQztDQUFBLEFBekJELElBeUJDO1NBcEJZLHFCQUFxQjs7O0lBQ2hDLCtDQUFpQzs7SUFDakMsc0NBQXVCOztJQUN2QiwyQ0FBNEI7O0lBQzVCLHFDQUFzQjs7SUFDdEIsZ0RBQWlDOztJQUNqQyx5Q0FBMEI7O0lBQzFCLHlDQUEwQjs7SUFDMUIscURBQW9EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPbkRlc3Ryb3ksIE91dHB1dCwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGliLXN1Y2Nlc3MtbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vc3VjY2Vzcy1tb2RhbC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3N1Y2Nlc3MtbW9kYWwuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFN1Y2Nlc3NNb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSAge1xuICBASW5wdXQoKSBkaXNwbGF5U3VjY2VzczogYm9vbGVhbjtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgdGl0bGVDaGVjazogc3RyaW5nO1xuICBASW5wdXQoKSB0ZXh0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGZhY3VsdGF0aXZlVGV4dDogc3RyaW5nO1xuICBASW5wdXQoKSBsYWJlbEJ0bjogc3RyaW5nO1xuICBASW5wdXQoKSB0ZXh0Qm9sZDogc3RyaW5nO1xuICBAT3V0cHV0KCkgZGlzcGxheVN1Y2Nlc3NDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblxuICBjb25zdHJ1Y3RvcigpIHsgfVxuXG4gIG9uQ2xvc2UoKSB7XG4gICAgdGhpcy5kaXNwbGF5U3VjY2Vzc0NoYW5nZS5lbWl0KGZhbHNlKTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZGlzcGxheVN1Y2Nlc3NDaGFuZ2UudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19